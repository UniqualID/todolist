/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/reset.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/reset.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* 1. Use a more-intuitive box-sizing model */\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\n/* 2. Remove default margin */\n* {\n  margin: 0;\n}\n\nbody {\n  /* 3. Add accessible line-height */\n  line-height: 1.5;\n  /* 4. Improve text rendering */\n  -webkit-font-smoothing: antialiased;\n}\n\n/* 5. Improve media defaults */\nimg, picture, video, canvas, svg {\n  display: block;\n  max-width: 100%;\n}\n\n/* 6. Inherit fonts for form controls */\ninput, button, textarea, select {\n  font: inherit;\n}\n\n/* 7. Avoid text overflows */\np, h1, h2, h3, h4, h5, h6 {\n  overflow-wrap: break-word;\n}\n\n/* 8. Improve line wrapping */\np {\n  text-wrap: pretty;\n}\nh1, h2, h3, h4, h5, h6 {\n  text-wrap: balance;\n}\n\n/*\n  9. Create a root stacking context\n*/\n#root, #__next {\n  isolation: isolate;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/reset.css\"],\"names\":[],\"mappings\":\"AAAA,6CAA6C;AAC7C;EACE,sBAAsB;AACxB;;AAEA,6BAA6B;AAC7B;EACE,SAAS;AACX;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,8BAA8B;EAC9B,mCAAmC;AACrC;;AAEA,8BAA8B;AAC9B;EACE,cAAc;EACd,eAAe;AACjB;;AAEA,uCAAuC;AACvC;EACE,aAAa;AACf;;AAEA,4BAA4B;AAC5B;EACE,yBAAyB;AAC3B;;AAEA,6BAA6B;AAC7B;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;;AAEA;;CAEC;AACD;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\"/* 1. Use a more-intuitive box-sizing model */\\n*, *::before, *::after {\\n  box-sizing: border-box;\\n}\\n\\n/* 2. Remove default margin */\\n* {\\n  margin: 0;\\n}\\n\\nbody {\\n  /* 3. Add accessible line-height */\\n  line-height: 1.5;\\n  /* 4. Improve text rendering */\\n  -webkit-font-smoothing: antialiased;\\n}\\n\\n/* 5. Improve media defaults */\\nimg, picture, video, canvas, svg {\\n  display: block;\\n  max-width: 100%;\\n}\\n\\n/* 6. Inherit fonts for form controls */\\ninput, button, textarea, select {\\n  font: inherit;\\n}\\n\\n/* 7. Avoid text overflows */\\np, h1, h2, h3, h4, h5, h6 {\\n  overflow-wrap: break-word;\\n}\\n\\n/* 8. Improve line wrapping */\\np {\\n  text-wrap: pretty;\\n}\\nh1, h2, h3, h4, h5, h6 {\\n  text-wrap: balance;\\n}\\n\\n/*\\n  9. Create a root stacking context\\n*/\\n#root, #__next {\\n  isolation: isolate;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9yZXNldC5jc3MiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUMwRztBQUNqQjtBQUN6Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsT0FBTyx1RkFBdUYsTUFBTSxZQUFZLE9BQU8sWUFBWSxNQUFNLFVBQVUsTUFBTSxLQUFLLFlBQVksYUFBYSxhQUFhLGFBQWEsT0FBTyxZQUFZLE1BQU0sVUFBVSxVQUFVLE9BQU8sWUFBWSxNQUFNLFVBQVUsTUFBTSxZQUFZLE1BQU0sWUFBWSxPQUFPLFlBQVksTUFBTSxZQUFZLE1BQU0sS0FBSyxZQUFZLE9BQU8sTUFBTSxLQUFLLEtBQUssWUFBWSxrR0FBa0csMkJBQTJCLEdBQUcsdUNBQXVDLGNBQWMsR0FBRyxVQUFVLDREQUE0RCwyRUFBMkUsR0FBRyx1RUFBdUUsbUJBQW1CLG9CQUFvQixHQUFHLCtFQUErRSxrQkFBa0IsR0FBRyw4REFBOEQsOEJBQThCLEdBQUcsdUNBQXVDLHNCQUFzQixHQUFHLDBCQUEwQix1QkFBdUIsR0FBRyxpRUFBaUUsdUJBQXVCLEdBQUcsbUJBQW1CO0FBQ3Z3QztBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3Jlc2V0LmNzcz9iMjdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiAxLiBVc2UgYSBtb3JlLWludHVpdGl2ZSBib3gtc2l6aW5nIG1vZGVsICovXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyogMi4gUmVtb3ZlIGRlZmF1bHQgbWFyZ2luICovXG4qIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5ib2R5IHtcbiAgLyogMy4gQWRkIGFjY2Vzc2libGUgbGluZS1oZWlnaHQgKi9cbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgLyogNC4gSW1wcm92ZSB0ZXh0IHJlbmRlcmluZyAqL1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuLyogNS4gSW1wcm92ZSBtZWRpYSBkZWZhdWx0cyAqL1xuaW1nLCBwaWN0dXJlLCB2aWRlbywgY2FudmFzLCBzdmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4vKiA2LiBJbmhlcml0IGZvbnRzIGZvciBmb3JtIGNvbnRyb2xzICovXG5pbnB1dCwgYnV0dG9uLCB0ZXh0YXJlYSwgc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLyogNy4gQXZvaWQgdGV4dCBvdmVyZmxvd3MgKi9cbnAsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xufVxuXG4vKiA4LiBJbXByb3ZlIGxpbmUgd3JhcHBpbmcgKi9cbnAge1xuICB0ZXh0LXdyYXA6IHByZXR0eTtcbn1cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICB0ZXh0LXdyYXA6IGJhbGFuY2U7XG59XG5cbi8qXG4gIDkuIENyZWF0ZSBhIHJvb3Qgc3RhY2tpbmcgY29udGV4dFxuKi9cbiNyb290LCAjX19uZXh0IHtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3Jlc2V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSw2Q0FBNkM7QUFDN0M7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUEsNkJBQTZCO0FBQzdCO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0NBQWtDO0VBQ2xDLGdCQUFnQjtFQUNoQiw4QkFBOEI7RUFDOUIsbUNBQW1DO0FBQ3JDOztBQUVBLDhCQUE4QjtBQUM5QjtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBLHVDQUF1QztBQUN2QztFQUNFLGFBQWE7QUFDZjs7QUFFQSw0QkFBNEI7QUFDNUI7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsNkJBQTZCO0FBQzdCO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7O0NBRUM7QUFDRDtFQUNFLGtCQUFrQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiAxLiBVc2UgYSBtb3JlLWludHVpdGl2ZSBib3gtc2l6aW5nIG1vZGVsICovXFxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4vKiAyLiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4gKi9cXG4qIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuYm9keSB7XFxuICAvKiAzLiBBZGQgYWNjZXNzaWJsZSBsaW5lLWhlaWdodCAqL1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIC8qIDQuIEltcHJvdmUgdGV4dCByZW5kZXJpbmcgKi9cXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcbn1cXG5cXG4vKiA1LiBJbXByb3ZlIG1lZGlhIGRlZmF1bHRzICovXFxuaW1nLCBwaWN0dXJlLCB2aWRlbywgY2FudmFzLCBzdmcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxufVxcblxcbi8qIDYuIEluaGVyaXQgZm9udHMgZm9yIGZvcm0gY29udHJvbHMgKi9cXG5pbnB1dCwgYnV0dG9uLCB0ZXh0YXJlYSwgc2VsZWN0IHtcXG4gIGZvbnQ6IGluaGVyaXQ7XFxufVxcblxcbi8qIDcuIEF2b2lkIHRleHQgb3ZlcmZsb3dzICovXFxucCwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XFxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xcbn1cXG5cXG4vKiA4LiBJbXByb3ZlIGxpbmUgd3JhcHBpbmcgKi9cXG5wIHtcXG4gIHRleHQtd3JhcDogcHJldHR5O1xcbn1cXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcXG4gIHRleHQtd3JhcDogYmFsYW5jZTtcXG59XFxuXFxuLypcXG4gIDkuIENyZWF0ZSBhIHJvb3Qgc3RhY2tpbmcgY29udGV4dFxcbiovXFxuI3Jvb3QsICNfX25leHQge1xcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/reset.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*, *::before, *::after {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n:root {\n\t--nav-height: 60px;\n\t--aside-width: 250px;\n\t--indicator-red: #FF8989;\n\t--indicator-yellow: #F8ED8C;\n\t--indicator-green: #89AC46;\n\t--corner-radius: 1em;\n\n\t/* Thank god for deepseek */\n\t--base-clr: #f8f9fa;\n\t--base-variant-clr: #dee2e6;\n\t--line-clr: #cecece;\n\t--hover-clr: #e9ecef;\n\t--text-clr: #212529;\n\t--text-clr-opaque: #21252974;\n\t--accent-clr: #4361ee;\n\t--secondary-text-clr: #495057;\n\n\t--secondary-text-clr: #b0b3c1;\n\t--box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1)\n}\n\n.darkmode {\n\t--base-clr: #11121a;\n\t--base-variant-clr: #24252e;\n\t--line-clr: #42434a;\n\t--hover-clr: #222533;\n\t--text-clr: #e6e6ef;\n\t--text-clr-opaque: #e6e6ef74;\n\t--accent-clr: #5e63ff;\n\t--secondary-text-clr: #b0b3c1;\n\t--box-shadow: 0 1px 2px rgba(255, 255, 255, 0.1);\n}\n\nsvg {\n\tfill: var(--text-clr);\n}\n\nbutton, input[type=\"submit\"], input[type=\"reset\"] {\n\tbackground: none;\n\tcolor: inherit;\n\tborder: none;\n\tpadding: 0;\n\tfont: inherit;\n\tcursor: pointer;\n\toutline: inherit;\n}\n\n\nbody {\n\tbackground-color: var(--base-clr);\n\tcolor: var(--text-clr);\n\tfont-family: poppins;\n\n\tdisplay: grid;\n\tgrid-template-columns: auto 1fr;\n}\n\nnav {\n\twidth: 100%;\n\theight: var(--nav-height);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: sticky;\n\ttop: 0;\n\tz-index: 200;\n\n\tbackground-color: var(--base-clr);\n\tgrid-column: 1 / -1;\n\tborder-bottom: 1px solid var(--line-clr);\n\tbox-shadow: var(--box-shadow)\n}\n\n\naside {\n\twidth: var(--aside-width);\n\theight: calc(100vh - var(--nav-height));\n\tposition: sticky;\n\tleft: 0;\n\ttop: var(--nav-height);\n\tpadding: 1em;\n\tborder-right: 1px solid var(--line-clr);\n\n\ttransition: 300ms ease-in-out;\n\toverflow-x: hidden;\n\ttext-wrap: nowrap;\n\n\t& ul {\n\t\tlist-style-type: none;\n\t}\n\n\t&>ul>li>button:first-child, &>ul>li>ul button {\n\t\twidth: 100%;\n\t\tpadding: 0.75em;\n\t\tborder: none;\n\t\tborder-radius: .5em;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 1.5em;\n\t}\n\n\tbutton:hover {\n\t\tbackground-color: var(--hover-clr);\n\t}\n\n\n\t.dropdown>span {\n\t\tflex-grow: 1;\n\t\ttext-align: left;\n\t}\n\n\t.active {\n\t\tcolor: var(--accent-clr);\n\n\t\tsvg {\n\t\t\tfill: var(--accent-clr)\n\t\t}\n\t}\n}\n\naside.close {\n\tpadding: 5px;\n\twidth: 60px;\n}\n\n/* First row of sidebar */\naside>ul>li:first-child {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-bottom: 15px;\n\n\t&>* {\n\t\tpadding: 1em;\n\t\tborder-radius: .5em;\n\t}\n\n\t&>button {\n\t\tmargin-left: auto;\n\t\tflex-shrink: 0;\n\t}\n}\n\naside svg {\n\ttransition: 200ms ease;\n\tflex-shrink: 0;\n}\n\n.rotate svg:last-child {\n\trotate: 180deg;\n}\n\n/* sidebar submenus */\naside .submenu {\n\tdisplay: grid;\n\tgrid-template-rows: 0fr;\n\ttransition: 300ms ease-in-out;\n\n\t>div {\n\t\toverflow: hidden;\n\t}\n\n\t&.show {\n\t\tgrid-template-rows: 1fr;\n\t}\n\n\tbutton {\n\t\tpadding: 0;\n\t\tpadding-left: 2em;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1em 1fr auto;\n\t\toverflow: hidden;\n\n\t\tspan {\n\t\t\ttext-align: left;\n\t\t\tpadding-top: 0.75em;\n\t\t\tpadding-bottom: 0.75em;\n\t\t}\n\n\t\t.removeproj {\n\t\t\topacity: 0;\n\t\t\ttransition: 200ms ease;\n\t\t\twidth: 40px;\n\t\t\theight: 100%;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\n\t\t\tsvg {\n\t\t\t\tfill: var(--base-clr);\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\topacity: 1;\n\t\t\t\tbackground-color: var(--indicator-red);\n\n\t\t\t}\n\t\t}\n\t}\n}\n\n#addproject {\n\tdisplay: block;\n\tpadding: .85em;\n\ttext-align: center;\n\tborder: 1px solid var(--indicator-red);\n\tfont-weight: 500;\n\ttransition: 200ms ease-in-out;\n\n\t&:hover {\n\t\tbackground-color: var(--indicator-red);\n\t\tcolor: var(--base-clr);\n\t}\n}\n\n.header-line {\n\tmargin-bottom: 15px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n#add-task {\n\twidth: 40px;\n\theight: 40px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 50%;\n\n\t&:hover {\n\t\tbackground-color: var(--hover-clr);\n\t}\n}\n\ndialog {\n\tmargin: auto auto;\n\tborder: none;\n\tborder-radius: var(--corner-radius);\n\tpadding: 30px;\n\n\tbackground-color: var(--base-clr);\n\tcolor: var(--text-clr);\n\n\th1 {\n\t\ttext-align: center;\n\t\tmargin-bottom: 15px;\n\t}\n\n\t/* Make all inputs look the same */\n\tinput[type=\"text\"],\n\tinput[type=\"date\"], select {\n\t\twidth: 300px;\n\t\tpadding: 10px;\n\t\tborder-radius: var(--corner-radius);\n\t\tborder: 1px solid var(--line-clr);\n\t\tbackground-color: var(--base-clr);\n\t\tcolor: var(--text-clr);\n\t\tmargin-bottom: 10px;\n\t}\n\n\t& .buttonwrapper {\n\t\tdisplay: flex;\n\t\tgap: 5px;\n\n\t\t& button {\n\t\t\tflex: 1;\n\t\t\tborder-radius: var(--corner-radius);\n\t\t\tborder: 1px solid var(--line-clr);\n\t\t\tpadding: .8em 1em;\n\n\t\t\t&:hover {\n\t\t\t\tbackground-color: var(--hover-clr);\n\t\t\t\ttransition: 200ms;\n\t\t\t}\n\t\t}\n\t}\n\n\t& ul {\n\t\tlist-style-type: none;\n\t\tmargin: 0 0 10px 0;\n\t\tpadding: 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 10px;\n\n\t\t& li {\n\t\t\t/* display: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 20px; */\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: 100px 1fr;\n\t\t\talign-items: center;\n\t\t\tcolumn-gap: 10px;\n\t\t}\n\t}\n\n\t& label {\n\t\tflex: 0 0 150px;\n\t\ttext-align: right;\n\t}\n\n\t& input[type=\"checkbox\"] {\n\t\tappearance: none;\n\t\tcursor: pointer;\n\t\tposition: relative;\n\t\twidth: 50px;\n\t\theight: 30px;\n\t\tborder-radius: 25px;\n\t\tbackground-color: #ccc;\n\t\ttransition: background .3s;\n\n\t\t&::after {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 30%;\n\t\t\ttransform: translate(-50%, -50%);\n\t\t\tborder-radius: 50%;\n\t\t\theight: 1.25rem;\n\t\t\twidth: 1.25rem;\n\t\t\tbackground-color: white;\n\t\t\ttransition: left .3s;\n\t\t}\n\n\t\t&:checked {\n\t\t\tbackground-color: rgb(141, 221, 141);\n\n\t\t\t&::after {\n\t\t\t\tleft: 70%;\n\t\t\t}\n\t\t}\n\t}\n\n\t&::backdrop {\n\t\tbackground-color: rgb(0, 0, 0, .5)\n\t}\n}\n\n\n.relative-wrap {\n\tposition: relative;\n}\n\n.task-row {\n\tdisplay: grid;\n\tgrid-template-columns: 15px 1fr 140px 130px auto;\n\talign-items: stretch;\n\tborder: 1px solid var(--line-clr);\n\tborder-radius: .5em;\n\toverflow: hidden;\n\tbox-shadow: var(--box-shadow);\n\tmargin-bottom: 10px;\n\t/* min-height: 56px; */\n\n\t.task-project, .task-desc, .task-date {\n\t\tpadding: 1em;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t.task-actions {\n\t\tdisplay: flex;\n\t\talign-items: stretch;\n\t}\n\n\t.icon-button {\n\t\twidth: 40px;\n\t\ttransition: background 0.2s ease;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\n\t\t&:hover svg {\n\t\t\tfill: var(--base-clr);\n\t\t}\n\n\t\t&:nth-of-type(1):hover {\n\t\t\tbackground-color: var(--indicator-green);\n\t\t}\n\n\t\t&:nth-of-type(2):hover {\n\t\t\tbackground-color: var(--indicator-yellow);\n\t\t}\n\n\t\t&:nth-of-type(3):hover {\n\t\t\tbackground-color: var(--indicator-red);\n\t\t}\n\t}\n\n\t&.completed::after {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\twidth: calc(100% + 20px);\n\t\theight: 0;\n\t\ttop: 50%;\n\t\tleft: -10px;\n\t\tborder-top: 4px solid var(--text-clr-opaque);\n\t}\n}\n\n.priority-indicator.red {\n\tbackground-color: var(--indicator-red);\n}\n\n.priority-indicator.yellow {\n\tbackground-color: var(--indicator-yellow);\n}\n\n.priority-indicator.green {\n\tbackground-color: var(--indicator-green);\n}\n\nmain {\n\tpadding: 2rem 4rem;\n\n\t.header-line {\n\t\tborder-bottom: 1px solid var(--line-clr)\n\t}\n}\n\n#theme-switch {\n\theight: 50px;\n\twidth: 50px;\n\tpadding: 0;\n\tborder-radius: 50%;\n\tbackground-color: var(--base-variant-clr);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: fixed;\n\ttop: calc(calc(var(--nav-height) -50px) / 2);\n\tright: 20px;\n}\n\n#theme-switch svg {\n\tfill: var(--text-clr);\n}\n\n#theme-switch svg:last-child {\n\tdisplay: none;\n}\n\n.darkmode #theme-switch svg:first-child {\n\tdisplay: none;\n}\n\n.darkmode #theme-switch svg:last-child {\n\tdisplay: block;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,SAAS;CACT,UAAU;AACX;;AAEA;CACC,kBAAkB;CAClB,oBAAoB;CACpB,wBAAwB;CACxB,2BAA2B;CAC3B,0BAA0B;CAC1B,oBAAoB;;CAEpB,2BAA2B;CAC3B,mBAAmB;CACnB,2BAA2B;CAC3B,mBAAmB;CACnB,oBAAoB;CACpB,mBAAmB;CACnB,4BAA4B;CAC5B,qBAAqB;CACrB,6BAA6B;;CAE7B,6BAA6B;CAC7B;AACD;;AAEA;CACC,mBAAmB;CACnB,2BAA2B;CAC3B,mBAAmB;CACnB,oBAAoB;CACpB,mBAAmB;CACnB,4BAA4B;CAC5B,qBAAqB;CACrB,6BAA6B;CAC7B,gDAAgD;AACjD;;AAEA;CACC,qBAAqB;AACtB;;AAEA;CACC,gBAAgB;CAChB,cAAc;CACd,YAAY;CACZ,UAAU;CACV,aAAa;CACb,eAAe;CACf,gBAAgB;AACjB;;;AAGA;CACC,iCAAiC;CACjC,sBAAsB;CACtB,oBAAoB;;CAEpB,aAAa;CACb,+BAA+B;AAChC;;AAEA;CACC,WAAW;CACX,yBAAyB;CACzB,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,gBAAgB;CAChB,MAAM;CACN,YAAY;;CAEZ,iCAAiC;CACjC,mBAAmB;CACnB,wCAAwC;CACxC;AACD;;;AAGA;CACC,yBAAyB;CACzB,uCAAuC;CACvC,gBAAgB;CAChB,OAAO;CACP,sBAAsB;CACtB,YAAY;CACZ,uCAAuC;;CAEvC,6BAA6B;CAC7B,kBAAkB;CAClB,iBAAiB;;CAEjB;EACC,qBAAqB;CACtB;;CAEA;EACC,WAAW;EACX,eAAe;EACf,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,UAAU;CACX;;CAEA;EACC,kCAAkC;CACnC;;;CAGA;EACC,YAAY;EACZ,gBAAgB;CACjB;;CAEA;EACC,wBAAwB;;EAExB;GACC;EACD;CACD;AACD;;AAEA;CACC,YAAY;CACZ,WAAW;AACZ;;AAEA,yBAAyB;AACzB;CACC,aAAa;CACb,yBAAyB;CACzB,mBAAmB;;CAEnB;EACC,YAAY;EACZ,mBAAmB;CACpB;;CAEA;EACC,iBAAiB;EACjB,cAAc;CACf;AACD;;AAEA;CACC,sBAAsB;CACtB,cAAc;AACf;;AAEA;CACC,cAAc;AACf;;AAEA,qBAAqB;AACrB;CACC,aAAa;CACb,uBAAuB;CACvB,6BAA6B;;CAE7B;EACC,gBAAgB;CACjB;;CAEA;EACC,uBAAuB;CACxB;;CAEA;EACC,UAAU;EACV,iBAAiB;EACjB,aAAa;EACb,mCAAmC;EACnC,gBAAgB;;EAEhB;GACC,gBAAgB;GAChB,mBAAmB;GACnB,sBAAsB;EACvB;;EAEA;GACC,UAAU;GACV,sBAAsB;GACtB,WAAW;GACX,YAAY;GACZ,aAAa;GACb,uBAAuB;GACvB,mBAAmB;;GAEnB;IACC,qBAAqB;GACtB;;GAEA;IACC,UAAU;IACV,sCAAsC;;GAEvC;EACD;CACD;AACD;;AAEA;CACC,cAAc;CACd,cAAc;CACd,kBAAkB;CAClB,sCAAsC;CACtC,gBAAgB;CAChB,6BAA6B;;CAE7B;EACC,sCAAsC;EACtC,sBAAsB;CACvB;AACD;;AAEA;CACC,mBAAmB;CACnB,aAAa;CACb,8BAA8B;AAC/B;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,kBAAkB;;CAElB;EACC,kCAAkC;CACnC;AACD;;AAEA;CACC,iBAAiB;CACjB,YAAY;CACZ,mCAAmC;CACnC,aAAa;;CAEb,iCAAiC;CACjC,sBAAsB;;CAEtB;EACC,kBAAkB;EAClB,mBAAmB;CACpB;;CAEA,kCAAkC;CAClC;;EAEC,YAAY;EACZ,aAAa;EACb,mCAAmC;EACnC,iCAAiC;EACjC,iCAAiC;EACjC,sBAAsB;EACtB,mBAAmB;CACpB;;CAEA;EACC,aAAa;EACb,QAAQ;;EAER;GACC,OAAO;GACP,mCAAmC;GACnC,iCAAiC;GACjC,iBAAiB;;GAEjB;IACC,kCAAkC;IAClC,iBAAiB;GAClB;EACD;CACD;;CAEA;EACC,qBAAqB;EACrB,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,SAAS;;EAET;GACC;;eAEY;GACZ,aAAa;GACb,gCAAgC;GAChC,mBAAmB;GACnB,gBAAgB;EACjB;CACD;;CAEA;EACC,eAAe;EACf,iBAAiB;CAClB;;CAEA;EACC,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,sBAAsB;EACtB,0BAA0B;;EAE1B;GACC,WAAW;GACX,kBAAkB;GAClB,QAAQ;GACR,SAAS;GACT,gCAAgC;GAChC,kBAAkB;GAClB,eAAe;GACf,cAAc;GACd,uBAAuB;GACvB,oBAAoB;EACrB;;EAEA;GACC,oCAAoC;;GAEpC;IACC,SAAS;GACV;EACD;CACD;;CAEA;EACC;CACD;AACD;;;AAGA;CACC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,gDAAgD;CAChD,oBAAoB;CACpB,iCAAiC;CACjC,mBAAmB;CACnB,gBAAgB;CAChB,6BAA6B;CAC7B,mBAAmB;CACnB,sBAAsB;;CAEtB;EACC,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;CACxB;;CAEA;EACC,aAAa;EACb,oBAAoB;CACrB;;CAEA;EACC,WAAW;EACX,gCAAgC;EAChC,aAAa;EACb,mBAAmB;EACnB,uBAAuB;;;EAGvB;GACC,qBAAqB;EACtB;;EAEA;GACC,wCAAwC;EACzC;;EAEA;GACC,yCAAyC;EAC1C;;EAEA;GACC,sCAAsC;EACvC;CACD;;CAEA;EACC,WAAW;EACX,kBAAkB;EAClB,wBAAwB;EACxB,SAAS;EACT,QAAQ;EACR,WAAW;EACX,4CAA4C;CAC7C;AACD;;AAEA;CACC,sCAAsC;AACvC;;AAEA;CACC,yCAAyC;AAC1C;;AAEA;CACC,wCAAwC;AACzC;;AAEA;CACC,kBAAkB;;CAElB;EACC;CACD;AACD;;AAEA;CACC,YAAY;CACZ,WAAW;CACX,UAAU;CACV,kBAAkB;CAClB,yCAAyC;CACzC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,eAAe;CACf,4CAA4C;CAC5C,WAAW;AACZ;;AAEA;CACC,qBAAqB;AACtB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,cAAc;AACf\",\"sourcesContent\":[\"*, *::before, *::after {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n\\n:root {\\n\\t--nav-height: 60px;\\n\\t--aside-width: 250px;\\n\\t--indicator-red: #FF8989;\\n\\t--indicator-yellow: #F8ED8C;\\n\\t--indicator-green: #89AC46;\\n\\t--corner-radius: 1em;\\n\\n\\t/* Thank god for deepseek */\\n\\t--base-clr: #f8f9fa;\\n\\t--base-variant-clr: #dee2e6;\\n\\t--line-clr: #cecece;\\n\\t--hover-clr: #e9ecef;\\n\\t--text-clr: #212529;\\n\\t--text-clr-opaque: #21252974;\\n\\t--accent-clr: #4361ee;\\n\\t--secondary-text-clr: #495057;\\n\\n\\t--secondary-text-clr: #b0b3c1;\\n\\t--box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1)\\n}\\n\\n.darkmode {\\n\\t--base-clr: #11121a;\\n\\t--base-variant-clr: #24252e;\\n\\t--line-clr: #42434a;\\n\\t--hover-clr: #222533;\\n\\t--text-clr: #e6e6ef;\\n\\t--text-clr-opaque: #e6e6ef74;\\n\\t--accent-clr: #5e63ff;\\n\\t--secondary-text-clr: #b0b3c1;\\n\\t--box-shadow: 0 1px 2px rgba(255, 255, 255, 0.1);\\n}\\n\\nsvg {\\n\\tfill: var(--text-clr);\\n}\\n\\nbutton, input[type=\\\"submit\\\"], input[type=\\\"reset\\\"] {\\n\\tbackground: none;\\n\\tcolor: inherit;\\n\\tborder: none;\\n\\tpadding: 0;\\n\\tfont: inherit;\\n\\tcursor: pointer;\\n\\toutline: inherit;\\n}\\n\\n\\nbody {\\n\\tbackground-color: var(--base-clr);\\n\\tcolor: var(--text-clr);\\n\\tfont-family: poppins;\\n\\n\\tdisplay: grid;\\n\\tgrid-template-columns: auto 1fr;\\n}\\n\\nnav {\\n\\twidth: 100%;\\n\\theight: var(--nav-height);\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tposition: sticky;\\n\\ttop: 0;\\n\\tz-index: 200;\\n\\n\\tbackground-color: var(--base-clr);\\n\\tgrid-column: 1 / -1;\\n\\tborder-bottom: 1px solid var(--line-clr);\\n\\tbox-shadow: var(--box-shadow)\\n}\\n\\n\\naside {\\n\\twidth: var(--aside-width);\\n\\theight: calc(100vh - var(--nav-height));\\n\\tposition: sticky;\\n\\tleft: 0;\\n\\ttop: var(--nav-height);\\n\\tpadding: 1em;\\n\\tborder-right: 1px solid var(--line-clr);\\n\\n\\ttransition: 300ms ease-in-out;\\n\\toverflow-x: hidden;\\n\\ttext-wrap: nowrap;\\n\\n\\t& ul {\\n\\t\\tlist-style-type: none;\\n\\t}\\n\\n\\t&>ul>li>button:first-child, &>ul>li>ul button {\\n\\t\\twidth: 100%;\\n\\t\\tpadding: 0.75em;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: .5em;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 1.5em;\\n\\t}\\n\\n\\tbutton:hover {\\n\\t\\tbackground-color: var(--hover-clr);\\n\\t}\\n\\n\\n\\t.dropdown>span {\\n\\t\\tflex-grow: 1;\\n\\t\\ttext-align: left;\\n\\t}\\n\\n\\t.active {\\n\\t\\tcolor: var(--accent-clr);\\n\\n\\t\\tsvg {\\n\\t\\t\\tfill: var(--accent-clr)\\n\\t\\t}\\n\\t}\\n}\\n\\naside.close {\\n\\tpadding: 5px;\\n\\twidth: 60px;\\n}\\n\\n/* First row of sidebar */\\naside>ul>li:first-child {\\n\\tdisplay: flex;\\n\\tjustify-content: flex-end;\\n\\tmargin-bottom: 15px;\\n\\n\\t&>* {\\n\\t\\tpadding: 1em;\\n\\t\\tborder-radius: .5em;\\n\\t}\\n\\n\\t&>button {\\n\\t\\tmargin-left: auto;\\n\\t\\tflex-shrink: 0;\\n\\t}\\n}\\n\\naside svg {\\n\\ttransition: 200ms ease;\\n\\tflex-shrink: 0;\\n}\\n\\n.rotate svg:last-child {\\n\\trotate: 180deg;\\n}\\n\\n/* sidebar submenus */\\naside .submenu {\\n\\tdisplay: grid;\\n\\tgrid-template-rows: 0fr;\\n\\ttransition: 300ms ease-in-out;\\n\\n\\t>div {\\n\\t\\toverflow: hidden;\\n\\t}\\n\\n\\t&.show {\\n\\t\\tgrid-template-rows: 1fr;\\n\\t}\\n\\n\\tbutton {\\n\\t\\tpadding: 0;\\n\\t\\tpadding-left: 2em;\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 1em 1fr auto;\\n\\t\\toverflow: hidden;\\n\\n\\t\\tspan {\\n\\t\\t\\ttext-align: left;\\n\\t\\t\\tpadding-top: 0.75em;\\n\\t\\t\\tpadding-bottom: 0.75em;\\n\\t\\t}\\n\\n\\t\\t.removeproj {\\n\\t\\t\\topacity: 0;\\n\\t\\t\\ttransition: 200ms ease;\\n\\t\\t\\twidth: 40px;\\n\\t\\t\\theight: 100%;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\n\\t\\t\\tsvg {\\n\\t\\t\\t\\tfill: var(--base-clr);\\n\\t\\t\\t}\\n\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\topacity: 1;\\n\\t\\t\\t\\tbackground-color: var(--indicator-red);\\n\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n#addproject {\\n\\tdisplay: block;\\n\\tpadding: .85em;\\n\\ttext-align: center;\\n\\tborder: 1px solid var(--indicator-red);\\n\\tfont-weight: 500;\\n\\ttransition: 200ms ease-in-out;\\n\\n\\t&:hover {\\n\\t\\tbackground-color: var(--indicator-red);\\n\\t\\tcolor: var(--base-clr);\\n\\t}\\n}\\n\\n.header-line {\\n\\tmargin-bottom: 15px;\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\\n\\n#add-task {\\n\\twidth: 40px;\\n\\theight: 40px;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tborder-radius: 50%;\\n\\n\\t&:hover {\\n\\t\\tbackground-color: var(--hover-clr);\\n\\t}\\n}\\n\\ndialog {\\n\\tmargin: auto auto;\\n\\tborder: none;\\n\\tborder-radius: var(--corner-radius);\\n\\tpadding: 30px;\\n\\n\\tbackground-color: var(--base-clr);\\n\\tcolor: var(--text-clr);\\n\\n\\th1 {\\n\\t\\ttext-align: center;\\n\\t\\tmargin-bottom: 15px;\\n\\t}\\n\\n\\t/* Make all inputs look the same */\\n\\tinput[type=\\\"text\\\"],\\n\\tinput[type=\\\"date\\\"], select {\\n\\t\\twidth: 300px;\\n\\t\\tpadding: 10px;\\n\\t\\tborder-radius: var(--corner-radius);\\n\\t\\tborder: 1px solid var(--line-clr);\\n\\t\\tbackground-color: var(--base-clr);\\n\\t\\tcolor: var(--text-clr);\\n\\t\\tmargin-bottom: 10px;\\n\\t}\\n\\n\\t& .buttonwrapper {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 5px;\\n\\n\\t\\t& button {\\n\\t\\t\\tflex: 1;\\n\\t\\t\\tborder-radius: var(--corner-radius);\\n\\t\\t\\tborder: 1px solid var(--line-clr);\\n\\t\\t\\tpadding: .8em 1em;\\n\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tbackground-color: var(--hover-clr);\\n\\t\\t\\t\\ttransition: 200ms;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t& ul {\\n\\t\\tlist-style-type: none;\\n\\t\\tmargin: 0 0 10px 0;\\n\\t\\tpadding: 0;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 10px;\\n\\n\\t\\t& li {\\n\\t\\t\\t/* display: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 20px; */\\n\\t\\t\\tdisplay: grid;\\n\\t\\t\\tgrid-template-columns: 100px 1fr;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tcolumn-gap: 10px;\\n\\t\\t}\\n\\t}\\n\\n\\t& label {\\n\\t\\tflex: 0 0 150px;\\n\\t\\ttext-align: right;\\n\\t}\\n\\n\\t& input[type=\\\"checkbox\\\"] {\\n\\t\\tappearance: none;\\n\\t\\tcursor: pointer;\\n\\t\\tposition: relative;\\n\\t\\twidth: 50px;\\n\\t\\theight: 30px;\\n\\t\\tborder-radius: 25px;\\n\\t\\tbackground-color: #ccc;\\n\\t\\ttransition: background .3s;\\n\\n\\t\\t&::after {\\n\\t\\t\\tcontent: '';\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\tleft: 30%;\\n\\t\\t\\ttransform: translate(-50%, -50%);\\n\\t\\t\\tborder-radius: 50%;\\n\\t\\t\\theight: 1.25rem;\\n\\t\\t\\twidth: 1.25rem;\\n\\t\\t\\tbackground-color: white;\\n\\t\\t\\ttransition: left .3s;\\n\\t\\t}\\n\\n\\t\\t&:checked {\\n\\t\\t\\tbackground-color: rgb(141, 221, 141);\\n\\n\\t\\t\\t&::after {\\n\\t\\t\\t\\tleft: 70%;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t&::backdrop {\\n\\t\\tbackground-color: rgb(0, 0, 0, .5)\\n\\t}\\n}\\n\\n\\n.relative-wrap {\\n\\tposition: relative;\\n}\\n\\n.task-row {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 15px 1fr 140px 130px auto;\\n\\talign-items: stretch;\\n\\tborder: 1px solid var(--line-clr);\\n\\tborder-radius: .5em;\\n\\toverflow: hidden;\\n\\tbox-shadow: var(--box-shadow);\\n\\tmargin-bottom: 10px;\\n\\t/* min-height: 56px; */\\n\\n\\t.task-project, .task-desc, .task-date {\\n\\t\\tpadding: 1em;\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n\\n\\t.task-actions {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: stretch;\\n\\t}\\n\\n\\t.icon-button {\\n\\t\\twidth: 40px;\\n\\t\\ttransition: background 0.2s ease;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\n\\n\\t\\t&:hover svg {\\n\\t\\t\\tfill: var(--base-clr);\\n\\t\\t}\\n\\n\\t\\t&:nth-of-type(1):hover {\\n\\t\\t\\tbackground-color: var(--indicator-green);\\n\\t\\t}\\n\\n\\t\\t&:nth-of-type(2):hover {\\n\\t\\t\\tbackground-color: var(--indicator-yellow);\\n\\t\\t}\\n\\n\\t\\t&:nth-of-type(3):hover {\\n\\t\\t\\tbackground-color: var(--indicator-red);\\n\\t\\t}\\n\\t}\\n\\n\\t&.completed::after {\\n\\t\\tcontent: \\\"\\\";\\n\\t\\tposition: absolute;\\n\\t\\twidth: calc(100% + 20px);\\n\\t\\theight: 0;\\n\\t\\ttop: 50%;\\n\\t\\tleft: -10px;\\n\\t\\tborder-top: 4px solid var(--text-clr-opaque);\\n\\t}\\n}\\n\\n.priority-indicator.red {\\n\\tbackground-color: var(--indicator-red);\\n}\\n\\n.priority-indicator.yellow {\\n\\tbackground-color: var(--indicator-yellow);\\n}\\n\\n.priority-indicator.green {\\n\\tbackground-color: var(--indicator-green);\\n}\\n\\nmain {\\n\\tpadding: 2rem 4rem;\\n\\n\\t.header-line {\\n\\t\\tborder-bottom: 1px solid var(--line-clr)\\n\\t}\\n}\\n\\n#theme-switch {\\n\\theight: 50px;\\n\\twidth: 50px;\\n\\tpadding: 0;\\n\\tborder-radius: 50%;\\n\\tbackground-color: var(--base-variant-clr);\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tposition: fixed;\\n\\ttop: calc(calc(var(--nav-height) -50px) / 2);\\n\\tright: 20px;\\n}\\n\\n#theme-switch svg {\\n\\tfill: var(--text-clr);\\n}\\n\\n#theme-switch svg:last-child {\\n\\tdisplay: none;\\n}\\n\\n.darkmode #theme-switch svg:first-child {\\n\\tdisplay: none;\\n}\\n\\n.darkmode #theme-switch svg:last-child {\\n\\tdisplay: block;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/styles.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./node_modules/emoji-picker-element/database.js":
/*!*******************************************************!*\
  !*** ./node_modules/emoji-picker-element/database.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Database)\n/* harmony export */ });\nfunction assertNonEmptyString (str) {\n  if (typeof str !== 'string' || !str) {\n    throw new Error('expected a non-empty string, got: ' + str)\n  }\n}\n\nfunction assertNumber (number) {\n  if (typeof number !== 'number') {\n    throw new Error('expected a number, got: ' + number)\n  }\n}\n\nconst DB_VERSION_CURRENT = 1;\nconst DB_VERSION_INITIAL = 1;\nconst STORE_EMOJI = 'emoji';\nconst STORE_KEYVALUE = 'keyvalue';\nconst STORE_FAVORITES = 'favorites';\nconst FIELD_TOKENS = 'tokens';\nconst INDEX_TOKENS = 'tokens';\nconst FIELD_UNICODE = 'unicode';\nconst INDEX_COUNT = 'count';\nconst FIELD_GROUP = 'group';\nconst FIELD_ORDER = 'order';\nconst INDEX_GROUP_AND_ORDER = 'group-order';\nconst KEY_ETAG = 'eTag';\nconst KEY_URL = 'url';\nconst KEY_PREFERRED_SKINTONE = 'skinTone';\nconst MODE_READONLY = 'readonly';\nconst MODE_READWRITE = 'readwrite';\nconst INDEX_SKIN_UNICODE = 'skinUnicodes';\nconst FIELD_SKIN_UNICODE = 'skinUnicodes';\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\nfunction uniqEmoji (emojis) {\n  return uniqBy(emojis, _ => _.unicode)\n}\n\nfunction initialMigration (db) {\n  function createObjectStore (name, keyPath, indexes) {\n    const store = keyPath\n      ? db.createObjectStore(name, { keyPath })\n      : db.createObjectStore(name);\n    if (indexes) {\n      for (const [indexName, [keyPath, multiEntry]] of Object.entries(indexes)) {\n        store.createIndex(indexName, keyPath, { multiEntry });\n      }\n    }\n    return store\n  }\n\n  createObjectStore(STORE_KEYVALUE);\n  createObjectStore(STORE_EMOJI, /* keyPath */ FIELD_UNICODE, {\n    [INDEX_TOKENS]: [FIELD_TOKENS, /* multiEntry */ true],\n    [INDEX_GROUP_AND_ORDER]: [[FIELD_GROUP, FIELD_ORDER]],\n    [INDEX_SKIN_UNICODE]: [FIELD_SKIN_UNICODE, /* multiEntry */ true]\n  });\n  createObjectStore(STORE_FAVORITES, undefined, {\n    [INDEX_COUNT]: ['']\n  });\n}\n\nconst openIndexedDBRequests = {};\nconst databaseCache = {};\nconst onCloseListeners = {};\n\nfunction handleOpenOrDeleteReq (resolve, reject, req) {\n  // These things are almost impossible to test with fakeIndexedDB sadly\n  /* istanbul ignore next */\n  req.onerror = () => reject(req.error);\n  /* istanbul ignore next */\n  req.onblocked = () => reject(new Error('IDB blocked'));\n  req.onsuccess = () => resolve(req.result);\n}\n\nasync function createDatabase (dbName) {\n  const db = await new Promise((resolve, reject) => {\n    const req = indexedDB.open(dbName, DB_VERSION_CURRENT);\n    openIndexedDBRequests[dbName] = req;\n    req.onupgradeneeded = e => {\n      // Technically there is only one version, so we don't need this `if` check\n      // But if an old version of the JS is in another browser tab\n      // and it gets upgraded in the future and we have a new DB version, well...\n      // better safe than sorry.\n      /* istanbul ignore else */\n      if (e.oldVersion < DB_VERSION_INITIAL) {\n        initialMigration(req.result);\n      }\n    };\n    handleOpenOrDeleteReq(resolve, reject, req);\n  });\n  // Handle abnormal closes, e.g. \"delete database\" in chrome dev tools.\n  // No need for removeEventListener, because once the DB can no longer\n  // fire \"close\" events, it will auto-GC.\n  // Unfortunately cannot test in fakeIndexedDB: https://github.com/dumbmatter/fakeIndexedDB/issues/50\n  /* istanbul ignore next */\n  db.onclose = () => closeDatabase(dbName);\n  return db\n}\n\nfunction openDatabase (dbName) {\n  if (!databaseCache[dbName]) {\n    databaseCache[dbName] = createDatabase(dbName);\n  }\n  return databaseCache[dbName]\n}\n\nfunction dbPromise (db, storeName, readOnlyOrReadWrite, cb) {\n  return new Promise((resolve, reject) => {\n    // Use relaxed durability because neither the emoji data nor the favorites/preferred skin tone\n    // are really irreplaceable data. IndexedDB is just a cache in this case.\n    const txn = db.transaction(storeName, readOnlyOrReadWrite, { durability: 'relaxed' });\n    const store = typeof storeName === 'string'\n      ? txn.objectStore(storeName)\n      : storeName.map(name => txn.objectStore(name));\n    let res;\n    cb(store, txn, (result) => {\n      res = result;\n    });\n\n    txn.oncomplete = () => resolve(res);\n    /* istanbul ignore next */\n    txn.onerror = () => reject(txn.error);\n  })\n}\n\nfunction closeDatabase (dbName) {\n  // close any open requests\n  const req = openIndexedDBRequests[dbName];\n  const db = req && req.result;\n  if (db) {\n    db.close();\n    const listeners = onCloseListeners[dbName];\n    /* istanbul ignore else */\n    if (listeners) {\n      for (const listener of listeners) {\n        listener();\n      }\n    }\n  }\n  delete openIndexedDBRequests[dbName];\n  delete databaseCache[dbName];\n  delete onCloseListeners[dbName];\n}\n\nfunction deleteDatabase (dbName) {\n  return new Promise((resolve, reject) => {\n    // close any open requests\n    closeDatabase(dbName);\n    const req = indexedDB.deleteDatabase(dbName);\n    handleOpenOrDeleteReq(resolve, reject, req);\n  })\n}\n\n// The \"close\" event occurs during an abnormal shutdown, e.g. a user clearing their browser data.\n// However, it doesn't occur with the normal \"close\" event, so we handle that separately.\n// https://www.w3.org/TR/IndexedDB/#close-a-database-connection\nfunction addOnCloseListener (dbName, listener) {\n  let listeners = onCloseListeners[dbName];\n  if (!listeners) {\n    listeners = onCloseListeners[dbName] = [];\n  }\n  listeners.push(listener);\n}\n\n// list of emoticons that don't match a simple \\W+ regex\n// extracted using:\n// require('emoji-picker-element-data/en/emojibase/data.json').map(_ => _.emoticon).filter(Boolean).filter(_ => !/^\\W+$/.test(_))\nconst irregularEmoticons = new Set([\n  ':D', 'XD', \":'D\", 'O:)',\n  ':X', ':P', ';P', 'XP',\n  ':L', ':Z', ':j', '8D',\n  'XO', '8)', ':B', ':O',\n  ':S', \":'o\", 'Dx', 'X(',\n  'D:', ':C', '>0)', ':3',\n  '</3', '<3', '\\\\M/', ':E',\n  '8#'\n]);\n\nfunction extractTokens (str) {\n  return str\n    .split(/[\\s_]+/)\n    .map(word => {\n      if (!word.match(/\\w/) || irregularEmoticons.has(word)) {\n        // for pure emoticons like :) or :-), just leave them as-is\n        return word.toLowerCase()\n      }\n\n      return word\n        .replace(/[)(:,]/g, '')\n        .replace(/’/g, \"'\")\n        .toLowerCase()\n    }).filter(Boolean)\n}\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\n\n// This is an extra step in addition to extractTokens(). The difference here is that we expect\n// the input to have already been run through extractTokens(). This is useful for cases like\n// emoticons, where we don't want to do any tokenization (because it makes no sense to split up\n// \">:)\" by the colon) but we do want to lowercase it to have consistent search results, so that\n// the user can type ':P' or ':p' and still get the same result.\nfunction normalizeTokens (str) {\n  return str\n    .filter(Boolean)\n    .map(_ => _.toLowerCase())\n    .filter(_ => _.length >= MIN_SEARCH_TEXT_LENGTH)\n}\n\n// Transform emoji data for storage in IDB\nfunction transformEmojiData (emojiData) {\n  const res = emojiData.map(({ annotation, emoticon, group, order, shortcodes, skins, tags, emoji, version }) => {\n    const tokens = [...new Set(\n      normalizeTokens([\n        ...(shortcodes || []).map(extractTokens).flat(),\n        ...(tags || []).map(extractTokens).flat(),\n        ...extractTokens(annotation),\n        emoticon\n      ])\n    )].sort();\n    const res = {\n      annotation,\n      group,\n      order,\n      tags,\n      tokens,\n      unicode: emoji,\n      version\n    };\n    if (emoticon) {\n      res.emoticon = emoticon;\n    }\n    if (shortcodes) {\n      res.shortcodes = shortcodes;\n    }\n    if (skins) {\n      res.skinTones = [];\n      res.skinUnicodes = [];\n      res.skinVersions = [];\n      for (const { tone, emoji, version } of skins) {\n        res.skinTones.push(tone);\n        res.skinUnicodes.push(emoji);\n        res.skinVersions.push(version);\n      }\n    }\n    return res\n  });\n  return res\n}\n\n// helper functions that help compress the code better\n\nfunction callStore (store, method, key, cb) {\n  store[method](key).onsuccess = e => (cb && cb(e.target.result));\n}\n\nfunction getIDB (store, key, cb) {\n  callStore(store, 'get', key, cb);\n}\n\nfunction getAllIDB (store, key, cb) {\n  callStore(store, 'getAll', key, cb);\n}\n\nfunction commit (txn) {\n  /* istanbul ignore else */\n  if (txn.commit) {\n    txn.commit();\n  }\n}\n\n// like lodash's minBy\nfunction minBy (array, func) {\n  let minItem = array[0];\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (func(minItem) > func(item)) {\n      minItem = item;\n    }\n  }\n  return minItem\n}\n\n// return an array of results representing all items that are found in each one of the arrays\n//\n\nfunction findCommonMembers (arrays, uniqByFunc) {\n  const shortestArray = minBy(arrays, _ => _.length);\n  const results = [];\n  for (const item of shortestArray) {\n    // if this item is included in every array in the intermediate results, add it to the final results\n    if (!arrays.some(array => array.findIndex(_ => uniqByFunc(_) === uniqByFunc(item)) === -1)) {\n      results.push(item);\n    }\n  }\n  return results\n}\n\nasync function isEmpty (db) {\n  return !(await get(db, STORE_KEYVALUE, KEY_URL))\n}\n\nasync function hasData (db, url, eTag) {\n  const [oldETag, oldUrl] = await Promise.all([KEY_ETAG, KEY_URL]\n    .map(key => get(db, STORE_KEYVALUE, key)));\n  return (oldETag === eTag && oldUrl === url)\n}\n\nasync function doFullDatabaseScanForSingleResult (db, predicate) {\n  // This batching algorithm is just a perf improvement over a basic\n  // cursor. The BATCH_SIZE is an estimate of what would give the best\n  // perf for doing a full DB scan (worst case).\n  //\n  // Mini-benchmark for determining the best batch size:\n  //\n  // PERF=1 pnpm build:rollup && pnpm test:adhoc\n  //\n  // (async () => {\n  //   performance.mark('start')\n  //   await $('emoji-picker').database.getEmojiByShortcode('doesnotexist')\n  //   performance.measure('total', 'start')\n  //   console.log(performance.getEntriesByName('total').slice(-1)[0].duration)\n  // })()\n  const BATCH_SIZE = 50; // Typically around 150ms for 6x slowdown in Chrome for above benchmark\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    let lastKey;\n\n    const processNextBatch = () => {\n      emojiStore.getAll(lastKey && IDBKeyRange.lowerBound(lastKey, true), BATCH_SIZE).onsuccess = e => {\n        const results = e.target.result;\n        for (const result of results) {\n          lastKey = result.unicode;\n          if (predicate(result)) {\n            return cb(result)\n          }\n        }\n        if (results.length < BATCH_SIZE) {\n          return cb()\n        }\n        processNextBatch();\n      };\n    };\n    processNextBatch();\n  })\n}\n\nasync function loadData (db, emojiData, url, eTag) {\n  try {\n    const transformedData = transformEmojiData(emojiData);\n    await dbPromise(db, [STORE_EMOJI, STORE_KEYVALUE], MODE_READWRITE, ([emojiStore, metaStore], txn) => {\n      let oldETag;\n      let oldUrl;\n      let todo = 0;\n\n      function checkFetched () {\n        if (++todo === 2) { // 2 requests made\n          onFetched();\n        }\n      }\n\n      function onFetched () {\n        if (oldETag === eTag && oldUrl === url) {\n          // check again within the transaction to guard against concurrency, e.g. multiple browser tabs\n          return\n        }\n        // delete old data\n        emojiStore.clear();\n        // insert new data\n        for (const data of transformedData) {\n          emojiStore.put(data);\n        }\n        metaStore.put(eTag, KEY_ETAG);\n        metaStore.put(url, KEY_URL);\n        commit(txn);\n      }\n\n      getIDB(metaStore, KEY_ETAG, result => {\n        oldETag = result;\n        checkFetched();\n      });\n\n      getIDB(metaStore, KEY_URL, result => {\n        oldUrl = result;\n        checkFetched();\n      });\n    });\n  } finally {\n  }\n}\n\nasync function getEmojiByGroup (db, group) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    const range = IDBKeyRange.bound([group, 0], [group + 1, 0], false, true);\n    getAllIDB(emojiStore.index(INDEX_GROUP_AND_ORDER), range, cb);\n  })\n}\n\nasync function getEmojiBySearchQuery (db, query) {\n  const tokens = normalizeTokens(extractTokens(query));\n\n  if (!tokens.length) {\n    return []\n  }\n\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    // get all results that contain all tokens (i.e. an AND query)\n    const intermediateResults = [];\n\n    const checkDone = () => {\n      if (intermediateResults.length === tokens.length) {\n        onDone();\n      }\n    };\n\n    const onDone = () => {\n      const results = findCommonMembers(intermediateResults, _ => _.unicode);\n      cb(results.sort((a, b) => a.order < b.order ? -1 : 1));\n    };\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      const range = i === tokens.length - 1\n        ? IDBKeyRange.bound(token, token + '\\uffff', false, true) // treat last token as a prefix search\n        : IDBKeyRange.only(token); // treat all other tokens as an exact match\n      getAllIDB(emojiStore.index(INDEX_TOKENS), range, result => {\n        intermediateResults.push(result);\n        checkDone();\n      });\n    }\n  })\n}\n\n// This could have been implemented as an IDB index on shortcodes, but it seemed wasteful to do that\n// when we can already query by tokens and this will give us what we're looking for 99.9% of the time\nasync function getEmojiByShortcode (db, shortcode) {\n  const emojis = await getEmojiBySearchQuery(db, shortcode);\n\n  // In very rare cases (e.g. the shortcode \"v\" as in \"v for victory\"), we cannot search because\n  // there are no usable tokens (too short in this case). In that case, we have to do an inefficient\n  // full-database scan, which I believe is an acceptable tradeoff for not having to have an extra\n  // index on shortcodes.\n\n  if (!emojis.length) {\n    const predicate = _ => ((_.shortcodes || []).includes(shortcode.toLowerCase()));\n    return (await doFullDatabaseScanForSingleResult(db, predicate)) || null\n  }\n\n  return emojis.filter(_ => {\n    const lowerShortcodes = (_.shortcodes || []).map(_ => _.toLowerCase());\n    return lowerShortcodes.includes(shortcode.toLowerCase())\n  })[0] || null\n}\n\nasync function getEmojiByUnicode (db, unicode) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => (\n    getIDB(emojiStore, unicode, result => {\n      if (result) {\n        return cb(result)\n      }\n      getIDB(emojiStore.index(INDEX_SKIN_UNICODE), unicode, result => cb(result || null));\n    })\n  ))\n}\n\nfunction get (db, storeName, key) {\n  return dbPromise(db, storeName, MODE_READONLY, (store, txn, cb) => (\n    getIDB(store, key, cb)\n  ))\n}\n\nfunction set (db, storeName, key, value) {\n  return dbPromise(db, storeName, MODE_READWRITE, (store, txn) => {\n    store.put(value, key);\n    commit(txn);\n  })\n}\n\nfunction incrementFavoriteEmojiCount (db, unicode) {\n  return dbPromise(db, STORE_FAVORITES, MODE_READWRITE, (store, txn) => (\n    getIDB(store, unicode, result => {\n      store.put((result || 0) + 1, unicode);\n      commit(txn);\n    })\n  ))\n}\n\nfunction getTopFavoriteEmoji (db, customEmojiIndex, limit) {\n  if (limit === 0) {\n    return []\n  }\n  return dbPromise(db, [STORE_FAVORITES, STORE_EMOJI], MODE_READONLY, ([favoritesStore, emojiStore], txn, cb) => {\n    const results = [];\n    favoritesStore.index(INDEX_COUNT).openCursor(undefined, 'prev').onsuccess = e => {\n      const cursor = e.target.result;\n      if (!cursor) { // no more results\n        return cb(results)\n      }\n\n      function addResult (result) {\n        results.push(result);\n        if (results.length === limit) {\n          return cb(results) // done, reached the limit\n        }\n        cursor.continue();\n      }\n\n      const unicodeOrName = cursor.primaryKey;\n      const custom = customEmojiIndex.byName(unicodeOrName);\n      if (custom) {\n        return addResult(custom)\n      }\n      // This could be done in parallel (i.e. make the cursor and the get()s parallelized),\n      // but my testing suggests it's not actually faster.\n      getIDB(emojiStore, unicodeOrName, emoji => {\n        if (emoji) {\n          return addResult(emoji)\n        }\n        // emoji not found somehow, ignore (may happen if custom emoji change)\n        cursor.continue();\n      });\n    };\n  })\n}\n\n// trie data structure for prefix searches\n// loosely based on https://github.com/nolanlawson/substring-trie\n\nconst CODA_MARKER = ''; // marks the end of the string\n\nfunction trie (arr, itemToTokens) {\n  const map = new Map();\n  for (const item of arr) {\n    const tokens = itemToTokens(item);\n    for (const token of tokens) {\n      let currentMap = map;\n      for (let i = 0; i < token.length; i++) {\n        const char = token.charAt(i);\n        let nextMap = currentMap.get(char);\n        if (!nextMap) {\n          nextMap = new Map();\n          currentMap.set(char, nextMap);\n        }\n        currentMap = nextMap;\n      }\n      let valuesAtCoda = currentMap.get(CODA_MARKER);\n      if (!valuesAtCoda) {\n        valuesAtCoda = [];\n        currentMap.set(CODA_MARKER, valuesAtCoda);\n      }\n      valuesAtCoda.push(item);\n    }\n  }\n\n  const search = (query, exact) => {\n    let currentMap = map;\n    for (let i = 0; i < query.length; i++) {\n      const char = query.charAt(i);\n      const nextMap = currentMap.get(char);\n      if (nextMap) {\n        currentMap = nextMap;\n      } else {\n        return []\n      }\n    }\n\n    if (exact) {\n      const results = currentMap.get(CODA_MARKER);\n      return results || []\n    }\n\n    const results = [];\n    // traverse\n    const queue = [currentMap];\n    while (queue.length) {\n      const currentMap = queue.shift();\n      const entriesSortedByKey = [...currentMap.entries()].sort((a, b) => a[0] < b[0] ? -1 : 1);\n      for (const [key, value] of entriesSortedByKey) {\n        if (key === CODA_MARKER) { // CODA_MARKER always comes first; it's the empty string\n          results.push(...value);\n        } else {\n          queue.push(value);\n        }\n      }\n    }\n    return results\n  };\n\n  return search\n}\n\nconst requiredKeys$1 = [\n  'name',\n  'url'\n];\n\nfunction assertCustomEmojis (customEmojis) {\n  const isArray = customEmojis && Array.isArray(customEmojis);\n  const firstItemIsFaulty = isArray &&\n    customEmojis.length &&\n    (!customEmojis[0] || requiredKeys$1.some(key => !(key in customEmojis[0])));\n  if (!isArray || firstItemIsFaulty) {\n    throw new Error('Custom emojis are in the wrong format')\n  }\n}\n\nfunction customEmojiIndex (customEmojis) {\n  assertCustomEmojis(customEmojis);\n\n  const sortByName = (a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\n\n  //\n  // all()\n  //\n  const all = customEmojis.sort(sortByName);\n\n  //\n  // search()\n  //\n  const emojiToTokens = emoji => {\n    const set = new Set();\n    if (emoji.shortcodes) {\n      for (const shortcode of emoji.shortcodes) {\n        for (const token of extractTokens(shortcode)) {\n          set.add(token);\n        }\n      }\n    }\n    return set\n  };\n  const searchTrie = trie(customEmojis, emojiToTokens);\n  const searchByExactMatch = _ => searchTrie(_, true);\n  const searchByPrefix = _ => searchTrie(_, false);\n\n  // Search by query for custom emoji. Similar to how we do this in IDB, the last token\n  // is treated as a prefix search, but every other one is treated as an exact match.\n  // Then we AND the results together\n  const search = query => {\n    const tokens = extractTokens(query);\n    const intermediateResults = tokens.map((token, i) => (\n      (i < tokens.length - 1 ? searchByExactMatch : searchByPrefix)(token)\n    ));\n    return findCommonMembers(intermediateResults, _ => _.name).sort(sortByName)\n  };\n\n  //\n  // byShortcode, byName\n  //\n  const shortcodeToEmoji = new Map();\n  const nameToEmoji = new Map();\n  for (const customEmoji of customEmojis) {\n    nameToEmoji.set(customEmoji.name.toLowerCase(), customEmoji);\n    for (const shortcode of (customEmoji.shortcodes || [])) {\n      shortcodeToEmoji.set(shortcode.toLowerCase(), customEmoji);\n    }\n  }\n\n  const byShortcode = shortcode => shortcodeToEmoji.get(shortcode.toLowerCase());\n  const byName = name => nameToEmoji.get(name.toLowerCase());\n\n  return {\n    all,\n    search,\n    byShortcode,\n    byName\n  }\n}\n\nconst isFirefoxContentScript = typeof wrappedJSObject !== 'undefined';\n\n// remove some internal implementation details, i.e. the \"tokens\" array on the emoji object\n// essentially, convert the emoji from the version stored in IDB to the version used in-memory\nfunction cleanEmoji (emoji) {\n  if (!emoji) {\n    return emoji\n  }\n  // if inside a Firefox content script, need to clone the emoji object to prevent Firefox from complaining about\n  // cross-origin object. See: https://github.com/nolanlawson/emoji-picker-element/issues/356\n  /* istanbul ignore if */\n  if (isFirefoxContentScript) {\n    emoji = structuredClone(emoji);\n  }\n  delete emoji.tokens;\n  if (emoji.skinTones) {\n    const len = emoji.skinTones.length;\n    emoji.skins = Array(len);\n    for (let i = 0; i < len; i++) {\n      emoji.skins[i] = {\n        tone: emoji.skinTones[i],\n        unicode: emoji.skinUnicodes[i],\n        version: emoji.skinVersions[i]\n      };\n    }\n    delete emoji.skinTones;\n    delete emoji.skinUnicodes;\n    delete emoji.skinVersions;\n  }\n  return emoji\n}\n\nfunction warnETag (eTag) {\n  if (!eTag) {\n    console.warn('emoji-picker-element is more efficient if the dataSource server exposes an ETag header.');\n  }\n}\n\nconst requiredKeys = [\n  'annotation',\n  'emoji',\n  'group',\n  'order',\n  'version'\n];\n\nfunction assertEmojiData (emojiData) {\n  if (!emojiData ||\n    !Array.isArray(emojiData) ||\n    !emojiData[0] ||\n    (typeof emojiData[0] !== 'object') ||\n    requiredKeys.some(key => (!(key in emojiData[0])))) {\n    throw new Error('Emoji data is in the wrong format')\n  }\n}\n\nfunction assertStatus (response, dataSource) {\n  if (Math.floor(response.status / 100) !== 2) {\n    throw new Error('Failed to fetch: ' + dataSource + ':  ' + response.status)\n  }\n}\n\nasync function getETag (dataSource) {\n  const response = await fetch(dataSource, { method: 'HEAD' });\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  return eTag\n}\n\nasync function getETagAndData (dataSource) {\n  const response = await fetch(dataSource);\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  const emojiData = await response.json();\n  assertEmojiData(emojiData);\n  return [eTag, emojiData]\n}\n\n// TODO: including these in blob-util.ts causes typedoc to generate docs for them,\n// even with --excludePrivate ¯\\_(ツ)_/¯\n/** @private */\n/**\n * Convert an `ArrayBuffer` to a binary string.\n *\n * Example:\n *\n * ```js\n * var myString = blobUtil.arrayBufferToBinaryString(arrayBuff)\n * ```\n *\n * @param buffer - array buffer\n * @returns binary string\n */\nfunction arrayBufferToBinaryString(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var length = bytes.byteLength;\n    var i = -1;\n    while (++i < length) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n}\n/**\n * Convert a binary string to an `ArrayBuffer`.\n *\n * ```js\n * var myBuffer = blobUtil.binaryStringToArrayBuffer(binaryString)\n * ```\n *\n * @param binary - binary string\n * @returns array buffer\n */\nfunction binaryStringToArrayBuffer(binary) {\n    var length = binary.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    var i = -1;\n    while (++i < length) {\n        arr[i] = binary.charCodeAt(i);\n    }\n    return buf;\n}\n\n// generate a checksum based on the stringified JSON\nasync function jsonChecksum (object) {\n  const inString = JSON.stringify(object);\n  let inBuffer = binaryStringToArrayBuffer(inString);\n\n  // this does not need to be cryptographically secure, SHA-1 is fine\n  const outBuffer = await crypto.subtle.digest('SHA-1', inBuffer);\n  const outBinString = arrayBufferToBinaryString(outBuffer);\n  const res = btoa(outBinString);\n  return res\n}\n\nasync function doCheckForUpdates (db, dataSource) {\n  // just do a simple HEAD request first to see if the eTags match\n  let emojiData;\n  let eTag = await getETag(dataSource);\n  if (!eTag) { // work around lack of ETag/Access-Control-Expose-Headers\n    const eTagAndData = await getETagAndData(dataSource);\n    eTag = eTagAndData[0];\n    emojiData = eTagAndData[1];\n    if (!eTag) {\n      eTag = await jsonChecksum(emojiData);\n    }\n  }\n  if (await hasData(db, dataSource, eTag)) ; else {\n    if (!emojiData) {\n      const eTagAndData = await getETagAndData(dataSource);\n      emojiData = eTagAndData[1];\n    }\n    await loadData(db, emojiData, dataSource, eTag);\n  }\n}\n\nasync function loadDataForFirstTime (db, dataSource) {\n  let [eTag, emojiData] = await getETagAndData(dataSource);\n  if (!eTag) {\n    // Handle lack of support for ETag or Access-Control-Expose-Headers\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers#Browser_compatibility\n    eTag = await jsonChecksum(emojiData);\n  }\n\n  await loadData(db, emojiData, dataSource, eTag);\n}\n\nasync function checkForUpdates (db, dataSource) {\n  try {\n    await doCheckForUpdates(db, dataSource);\n  } catch (err) {\n    // Checking for updates is not a critical operation, and it can fail if e.g. the picker is quickly removed and\n    // re-added to the DOM. In those cases, we may get an IndexedDB InvalidStateError because we are attempting to close\n    // the database connection, possibly while another request is inflight. So there's effectively no way to prevent\n    // InvalidStateErrors unless we were to carefully sequence our IndexedDB operations. Much more simply, we can just\n    // ignore IndexedDB InvalidStateErrors here and give users one less useless error message in their console.\n    if (err.name !== 'InvalidStateError') {\n      throw err\n    }\n  }\n}\n\nclass Database {\n  constructor ({ dataSource = DEFAULT_DATA_SOURCE, locale = DEFAULT_LOCALE, customEmoji = [] } = {}) {\n    this.dataSource = dataSource;\n    this.locale = locale;\n    this._dbName = `emoji-picker-element-${this.locale}`;\n    this._db = undefined;\n    this._lazyUpdate = undefined;\n    this._custom = customEmojiIndex(customEmoji);\n\n    this._clear = this._clear.bind(this);\n    this._ready = this._init();\n  }\n\n  async _init () {\n    const db = this._db = await openDatabase(this._dbName);\n\n    addOnCloseListener(this._dbName, this._clear);\n    const dataSource = this.dataSource;\n    const empty = await isEmpty(db);\n\n    if (empty) {\n      await loadDataForFirstTime(db, dataSource);\n    } else { // offline-first - do an update asynchronously\n      this._lazyUpdate = checkForUpdates(db, dataSource);\n    }\n  }\n\n  async ready () {\n    const checkReady = async () => {\n      if (!this._ready) {\n        this._ready = this._init();\n      }\n      return this._ready\n    };\n    await checkReady();\n    // There's a possibility of a race condition where the element gets added, removed, and then added again\n    // with a particular timing, which would set the _db to undefined.\n    // We *could* do a while loop here, but that seems excessive and could lead to an infinite loop.\n    if (!this._db) {\n      await checkReady();\n    }\n  }\n\n  async getEmojiByGroup (group) {\n    assertNumber(group);\n    await this.ready();\n    return uniqEmoji(await getEmojiByGroup(this._db, group)).map(cleanEmoji)\n  }\n\n  async getEmojiBySearchQuery (query) {\n    assertNonEmptyString(query);\n    await this.ready();\n    const customs = this._custom.search(query);\n    const natives = uniqEmoji(await getEmojiBySearchQuery(this._db, query)).map(cleanEmoji);\n    return [\n      ...customs,\n      ...natives\n    ]\n  }\n\n  async getEmojiByShortcode (shortcode) {\n    assertNonEmptyString(shortcode);\n    await this.ready();\n    const custom = this._custom.byShortcode(shortcode);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByShortcode(this._db, shortcode))\n  }\n\n  async getEmojiByUnicodeOrName (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    const custom = this._custom.byName(unicodeOrName);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByUnicode(this._db, unicodeOrName))\n  }\n\n  async getPreferredSkinTone () {\n    await this.ready();\n    return (await get(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE)) || 0\n  }\n\n  async setPreferredSkinTone (skinTone) {\n    assertNumber(skinTone);\n    await this.ready();\n    return set(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE, skinTone)\n  }\n\n  async incrementFavoriteEmojiCount (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    return incrementFavoriteEmojiCount(this._db, unicodeOrName)\n  }\n\n  async getTopFavoriteEmoji (limit) {\n    assertNumber(limit);\n    await this.ready();\n    return (await getTopFavoriteEmoji(this._db, this._custom, limit)).map(cleanEmoji)\n  }\n\n  set customEmoji (customEmojis) {\n    this._custom = customEmojiIndex(customEmojis);\n  }\n\n  get customEmoji () {\n    return this._custom.all\n  }\n\n  async _shutdown () {\n    await this.ready(); // reopen if we've already been closed/deleted\n    try {\n      await this._lazyUpdate; // allow any lazy updates to process before closing/deleting\n    } catch (err) { /* ignore network errors (offline-first) */ }\n  }\n\n  // clear references to IDB, e.g. during a close event\n  _clear () {\n    // We don't need to call removeEventListener or remove the manual \"close\" listeners.\n    // The memory leak tests prove this is unnecessary. It's because:\n    // 1) IDBDatabases that can no longer fire \"close\" automatically have listeners GCed\n    // 2) we clear the manual close listeners in databaseLifecycle.js.\n    this._db = this._ready = this._lazyUpdate = undefined;\n  }\n\n  async close () {\n    await this._shutdown();\n    await closeDatabase(this._dbName);\n  }\n\n  async delete () {\n    await this._shutdown();\n    await deleteDatabase(this._dbName);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/emoji-picker-element/database.js\n");

/***/ }),

/***/ "./node_modules/emoji-picker-element/index.js":
/*!****************************************************!*\
  !*** ./node_modules/emoji-picker-element/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: () => (/* reexport safe */ _database_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   Picker: () => (/* reexport safe */ _picker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _picker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./picker.js */ \"./node_modules/emoji-picker-element/picker.js\");\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./database.js */ \"./node_modules/emoji-picker-element/database.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW1vamktcGlja2VyLWVsZW1lbnQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNJO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZW1vamktcGlja2VyLWVsZW1lbnQvaW5kZXguanM/MzA5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGlja2VyIGZyb20gJy4vcGlja2VyLmpzJ1xuaW1wb3J0IERhdGFiYXNlIGZyb20gJy4vZGF0YWJhc2UuanMnXG5leHBvcnQgeyBQaWNrZXIsIERhdGFiYXNlIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/emoji-picker-element/index.js\n");

/***/ }),

/***/ "./node_modules/emoji-picker-element/picker.js":
/*!*****************************************************!*\
  !*** ./node_modules/emoji-picker-element/picker.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PickerElement)\n/* harmony export */ });\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database.js */ \"./node_modules/emoji-picker-element/database.js\");\n\n\n// via https://unpkg.com/browse/emojibase-data@6.0.0/meta/groups.json\nconst allGroups = [\n  [-1, '✨', 'custom'],\n  [0, '😀', 'smileys-emotion'],\n  [1, '👋', 'people-body'],\n  [3, '🐱', 'animals-nature'],\n  [4, '🍎', 'food-drink'],\n  [5, '🏠️', 'travel-places'],\n  [6, '⚽', 'activities'],\n  [7, '📝', 'objects'],\n  [8, '⛔️', 'symbols'],\n  [9, '🏁', 'flags']\n].map(([id, emoji, name]) => ({ id, emoji, name }));\n\nconst groups = allGroups.slice(1);\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\nconst NUM_SKIN_TONES = 6;\n\n/* istanbul ignore next */\nconst rIC = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout;\n\n// check for ZWJ (zero width joiner) character\nfunction hasZwj (emoji) {\n  return emoji.unicode.includes('\\u200d')\n}\n\n// Find one good representative emoji from each version to test by checking its color.\n// Ideally it should have color in the center. For some inspiration, see:\n// https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n//\n// Note that for certain versions (12.1, 13.1), there is no point in testing them explicitly, because\n// all the emoji from this version are compound-emoji from previous versions. So they would pass a color\n// test, even in browsers that display them as double emoji. (E.g. \"face in clouds\" might render as\n// \"face without mouth\" plus \"fog\".) These emoji can only be filtered using the width test,\n// which happens in checkZwjSupport.js.\nconst versionsAndTestEmoji = {\n  '🫩': 16, // face with bags under eyes\n  '🫨': 15.1, // shaking head, technically from v15 but see note above\n  '🫠': 14,\n  '🥲': 13.1, // smiling face with tear, technically from v13 but see note above\n  '🥻': 12.1, // sari, technically from v12 but see note above\n  '🥰': 11,\n  '🤩': 5,\n  '👱‍♀️': 4,\n  '🤣': 3,\n  '👁️‍🗨️': 2,\n  '😀': 1,\n  '😐️': 0.7,\n  '😃': 0.6\n};\n\nconst TIMEOUT_BEFORE_LOADING_MESSAGE = 1000; // 1 second\nconst DEFAULT_SKIN_TONE_EMOJI = '🖐️';\nconst DEFAULT_NUM_COLUMNS = 8;\n\n// Based on https://fivethirtyeight.com/features/the-100-most-used-emojis/ and\n// https://blog.emojipedia.org/facebook-reveals-most-and-least-used-emojis/ with\n// a bit of my own curation. (E.g. avoid the \"OK\" gesture because of connotations:\n// https://emojipedia.org/ok-hand/)\nconst MOST_COMMONLY_USED_EMOJI = [\n  '😊',\n  '😒',\n  '❤️',\n  '👍️',\n  '😍',\n  '😂',\n  '😭',\n  '☺️',\n  '😔',\n  '😩',\n  '😏',\n  '💕',\n  '🙌',\n  '😘'\n];\n\n// It's important to list Twemoji Mozilla before everything else, because Mozilla bundles their\n// own font on some platforms (notably Windows and Linux as of this writing). Typically, Mozilla\n// updates faster than the underlying OS, and we don't want to render older emoji in one font and\n// newer emoji in another font:\n// https://github.com/nolanlawson/emoji-picker-element/pull/268#issuecomment-1073347283\nconst FONT_FAMILY = '\"Twemoji Mozilla\",\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",' +\n  '\"Noto Color Emoji\",\"EmojiOne Color\",\"Android Emoji\",sans-serif';\n\n/* istanbul ignore next */\nconst DEFAULT_CATEGORY_SORTING = (a, b) => a < b ? -1 : a > b ? 1 : 0;\n\n// Test if an emoji is supported by rendering it to canvas and checking that the color is not black\n// See https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n// and https://www.npmjs.com/package/if-emoji for inspiration\n// This implementation is largely borrowed from if-emoji, adding the font-family\n\n\nconst getTextFeature = (text, color) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = canvas.height = 1;\n\n  const ctx = canvas.getContext('2d', {\n    // Improves the performance of `getImageData()`\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getContextAttributes#willreadfrequently\n    willReadFrequently: true\n  });\n  ctx.textBaseline = 'top';\n  ctx.font = `100px ${FONT_FAMILY}`;\n  ctx.fillStyle = color;\n  ctx.scale(0.01, 0.01);\n  ctx.fillText(text, 0, 0);\n\n  return ctx.getImageData(0, 0, 1, 1).data\n};\n\nconst compareFeatures = (feature1, feature2) => {\n  const feature1Str = [...feature1].join(',');\n  const feature2Str = [...feature2].join(',');\n  // This is RGBA, so for 0,0,0, we are checking that the first RGB is not all zeroes.\n  // Most of the time when unsupported this is 0,0,0,0, but on Chrome on Mac it is\n  // 0,0,0,61 - there is a transparency here.\n  return feature1Str === feature2Str && !feature1Str.startsWith('0,0,0,')\n};\n\nfunction testColorEmojiSupported (text) {\n  // Render white and black and then compare them to each other and ensure they're the same\n  // color, and neither one is black. This shows that the emoji was rendered in color.\n  const feature1 = getTextFeature(text, '#000');\n  const feature2 = getTextFeature(text, '#fff');\n  return feature1 && feature2 && compareFeatures(feature1, feature2)\n}\n\n// rather than check every emoji ever, which would be expensive, just check some representatives from the\n// different emoji releases to determine what the font supports\n\nfunction determineEmojiSupportLevel () {\n  const entries = Object.entries(versionsAndTestEmoji);\n  try {\n    // start with latest emoji and work backwards\n    for (const [emoji, version] of entries) {\n      if (testColorEmojiSupported(emoji)) {\n        return version\n      }\n    }\n  } catch (e) { // canvas error\n  } finally {\n  }\n  // In case of an error, be generous and just assume all emoji are supported (e.g. for canvas errors\n  // due to anti-fingerprinting add-ons). Better to show some gray boxes than nothing at all.\n  return entries[0][1] // first one in the list is the most recent version\n}\n\n// Check which emojis we know for sure aren't supported, based on Unicode version level\nlet promise;\nconst detectEmojiSupportLevel = () => {\n  if (!promise) {\n    // Delay so it can run while the IDB database is being created by the browser (on another thread).\n    // This helps especially with first load – we want to start pre-populating the database on the main thread,\n    // and then wait for IDB to commit everything, and while waiting we run this check.\n    promise = new Promise(resolve => (\n      rIC(() => (\n        resolve(determineEmojiSupportLevel()) // delay so ideally this can run while IDB is first populating\n      ))\n    ));\n  }\n  return promise\n};\n// determine which emojis containing ZWJ (zero width joiner) characters\n// are supported (rendered as one glyph) rather than unsupported (rendered as two or more glyphs)\nconst supportedZwjEmojis = new Map();\n\nconst VARIATION_SELECTOR = '\\ufe0f';\nconst SKINTONE_MODIFIER = '\\ud83c';\nconst ZWJ = '\\u200d';\nconst LIGHT_SKIN_TONE = 0x1F3FB;\nconst LIGHT_SKIN_TONE_MODIFIER = 0xdffb;\n\n// TODO: this is a naive implementation, we can improve it later\n// It's only used for the skintone picker, so as long as people don't customize with\n// really exotic emoji then it should work fine\nfunction applySkinTone (str, skinTone) {\n  if (skinTone === 0) {\n    return str\n  }\n  const zwjIndex = str.indexOf(ZWJ);\n  if (zwjIndex !== -1) {\n    return str.substring(0, zwjIndex) +\n      String.fromCodePoint(LIGHT_SKIN_TONE + skinTone - 1) +\n      str.substring(zwjIndex)\n  }\n  if (str.endsWith(VARIATION_SELECTOR)) {\n    str = str.substring(0, str.length - 1);\n  }\n  return str + SKINTONE_MODIFIER + String.fromCodePoint(LIGHT_SKIN_TONE_MODIFIER + skinTone - 1)\n}\n\nfunction halt (event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// Implementation left/right or up/down navigation, circling back when you\n// reach the start/end of the list\nfunction incrementOrDecrement (decrement, val, arr) {\n  val += (decrement ? -1 : 1);\n  if (val < 0) {\n    val = arr.length - 1;\n  } else if (val >= arr.length) {\n    val = 0;\n  }\n  return val\n}\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\n// We don't need all the data on every emoji, and there are specific things we need\n// for the UI, so build a \"view model\" from the emoji object we got from the database\n\nfunction summarizeEmojisForUI (emojis, emojiSupportLevel) {\n  const toSimpleSkinsMap = skins => {\n    const res = {};\n    for (const skin of skins) {\n      // ignore arrays like [1, 2] with multiple skin tones\n      // also ignore variants that are in an unsupported emoji version\n      // (these do exist - variants from a different version than their base emoji)\n      if (typeof skin.tone === 'number' && skin.version <= emojiSupportLevel) {\n        res[skin.tone] = skin.unicode;\n      }\n    }\n    return res\n  };\n\n  return emojis.map(({ unicode, skins, shortcodes, url, name, category, annotation }) => ({\n    unicode,\n    name,\n    shortcodes,\n    url,\n    category,\n    annotation,\n    id: unicode || name,\n    skins: skins && toSimpleSkinsMap(skins)\n  }))\n}\n\n// import rAF from one place so that the bundle size is a bit smaller\nconst rAF = requestAnimationFrame;\n\n// \"Svelte action\"-like utility to detect layout changes via ResizeObserver.\n// If ResizeObserver is unsupported, we just use rAF once and don't bother to update.\n\n\nlet resizeObserverSupported = typeof ResizeObserver === 'function';\n\nfunction resizeObserverAction (node, abortSignal, onUpdate) {\n  let resizeObserver;\n  if (resizeObserverSupported) {\n    resizeObserver = new ResizeObserver(onUpdate);\n    resizeObserver.observe(node);\n  } else { // just run once, don't bother trying to track it\n    rAF(onUpdate);\n  }\n\n  // cleanup function (called on destroy)\n  abortSignal.addEventListener('abort', () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n    }\n  });\n}\n\n// get the width of the text inside of a DOM node, via https://stackoverflow.com/a/59525891/680742\nfunction calculateTextWidth (node) {\n  // skip running this in jest/vitest because we don't need to check for emoji support in that environment\n  /* istanbul ignore else */\n  {\n    const range = document.createRange();\n    range.selectNode(node.firstChild);\n    return range.getBoundingClientRect().width\n  }\n}\n\nlet baselineEmojiWidth;\n\n/**\n * Check if the given emojis containing ZWJ characters are supported by the current browser (don't render\n * as double characters) and return true if all are supported.\n * @param zwjEmojisToCheck\n * @param baselineEmoji\n * @param emojiToDomNode\n */\nfunction checkZwjSupport (zwjEmojisToCheck, baselineEmoji, emojiToDomNode) {\n  let allSupported = true;\n  for (const emoji of zwjEmojisToCheck) {\n    const domNode = emojiToDomNode(emoji);\n    // sanity check to make sure the node is defined properly\n    /* istanbul ignore if */\n    if (!domNode) {\n      // This is a race condition that can occur when the component is unmounted/remounted\n      // It doesn't really matter what we do here since the old context is not going to render anymore.\n      // Just bail out of emoji support detection and return `allSupported=true` since the rendering context is gone\n      continue\n    }\n    const emojiWidth = calculateTextWidth(domNode);\n    if (typeof baselineEmojiWidth === 'undefined') { // calculate the baseline emoji width only once\n      baselineEmojiWidth = calculateTextWidth(baselineEmoji);\n    }\n    // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n    // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n    // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n    // So here we set the threshold at 1.8 times the size of the baseline emoji.\n    const supported = emojiWidth / 1.8 < baselineEmojiWidth;\n    supportedZwjEmojis.set(emoji.unicode, supported);\n\n    if (!supported) {\n      allSupported = false;\n    }\n  }\n  return allSupported\n}\n\n// like lodash's uniq\n\nfunction uniq (arr) {\n  return uniqBy(arr, _ => _)\n}\n\n// Note we put this in its own function outside Picker.js to avoid Svelte doing an invalidation on the \"setter\" here.\n// At best the invalidation is useless, at worst it can cause infinite loops:\n// https://github.com/nolanlawson/emoji-picker-element/pull/180\n// https://github.com/sveltejs/svelte/issues/6521\n// Also note tabpanelElement can be null if the element is disconnected immediately after connected\nfunction resetScrollTopIfPossible (element) {\n  /* istanbul ignore else */\n  if (element) { // Makes me nervous not to have this `if` guard\n    element.scrollTop = 0;\n  }\n}\n\nfunction getFromMap (cache, key, func) {\n  let cached = cache.get(key);\n  if (!cached) {\n    cached = func();\n    cache.set(key, cached);\n  }\n  return cached\n}\n\nfunction toString (value) {\n  return '' + value\n}\n\nfunction parseTemplate (htmlString) {\n  const template = document.createElement('template');\n  template.innerHTML = htmlString;\n  return template\n}\n\nconst parseCache = new WeakMap();\nconst domInstancesCache = new WeakMap();\n// This needs to be a symbol because it needs to be different from any possible output of a key function\nconst unkeyedSymbol = Symbol('un-keyed');\n\n// Not supported in Safari <=13\nconst hasReplaceChildren = 'replaceChildren' in Element.prototype;\nfunction replaceChildren (parentNode, newChildren) {\n  /* istanbul ignore else */\n  if (hasReplaceChildren) {\n    parentNode.replaceChildren(...newChildren);\n  } else { // minimal polyfill for Element.prototype.replaceChildren\n    parentNode.innerHTML = '';\n    parentNode.append(...newChildren);\n  }\n}\n\nfunction doChildrenNeedRerender (parentNode, newChildren) {\n  let oldChild = parentNode.firstChild;\n  let oldChildrenCount = 0;\n  // iterate using firstChild/nextSibling because browsers use a linked list under the hood\n  while (oldChild) {\n    const newChild = newChildren[oldChildrenCount];\n    // check if the old child and new child are the same\n    if (newChild !== oldChild) {\n      return true\n    }\n    oldChild = oldChild.nextSibling;\n    oldChildrenCount++;\n  }\n  // if new children length is different from old, we must re-render\n  return oldChildrenCount !== newChildren.length\n}\n\nfunction patchChildren (newChildren, instanceBinding) {\n  const { targetNode } = instanceBinding;\n  let { targetParentNode } = instanceBinding;\n\n  let needsRerender = false;\n\n  if (targetParentNode) { // already rendered once\n    needsRerender = doChildrenNeedRerender(targetParentNode, newChildren);\n  } else { // first render of list\n    needsRerender = true;\n    instanceBinding.targetNode = undefined; // placeholder node not needed anymore, free memory\n    instanceBinding.targetParentNode = targetParentNode = targetNode.parentNode;\n  }\n  // avoid re-rendering list if the dom nodes are exactly the same before and after\n  if (needsRerender) {\n    replaceChildren(targetParentNode, newChildren);\n  }\n}\n\nfunction patch (expressions, instanceBindings) {\n  for (const instanceBinding of instanceBindings) {\n    const {\n      targetNode,\n      currentExpression,\n      binding: {\n        expressionIndex,\n        attributeName,\n        attributeValuePre,\n        attributeValuePost\n      }\n    } = instanceBinding;\n\n    const expression = expressions[expressionIndex];\n\n    if (currentExpression === expression) {\n      // no need to update, same as before\n      continue\n    }\n\n    instanceBinding.currentExpression = expression;\n\n    if (attributeName) { // attribute replacement\n      if (expression === null) {\n        // null is treated as a special case by the framework - we don't render an attribute at all in this case\n        targetNode.removeAttribute(attributeName);\n      } else {\n        // attribute value is not null; set a new attribute\n        const newValue = attributeValuePre + toString(expression) + attributeValuePost;\n        targetNode.setAttribute(attributeName, newValue);\n      }\n    } else { // text node / child element / children replacement\n      let newNode;\n      if (Array.isArray(expression)) { // array of DOM elements produced by tag template literals\n        patchChildren(expression, instanceBinding);\n      } else if (expression instanceof Element) { // html tag template returning a DOM element\n        newNode = expression;\n        targetNode.replaceWith(newNode);\n      } else { // primitive - string, number, etc\n        // nodeValue is faster than textContent supposedly https://www.youtube.com/watch?v=LY6y3HbDVmg\n        // note we may be replacing the value in a placeholder text node\n        targetNode.nodeValue = toString(expression);\n      }\n      if (newNode) {\n        instanceBinding.targetNode = newNode;\n      }\n    }\n  }\n}\n\nfunction parse (tokens) {\n  let htmlString = '';\n\n  let withinTag = false;\n  let withinAttribute = false;\n  let elementIndexCounter = -1; // depth-first traversal order\n\n  const elementsToBindings = new Map();\n  const elementIndexes = [];\n\n  let skipTokenChars = 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const token = tokens[i];\n    htmlString += token.slice(skipTokenChars);\n\n    if (i === len - 1) {\n      break // no need to process characters - no more expressions to be found\n    }\n\n    for (let j = 0; j < token.length; j++) {\n      const char = token.charAt(j);\n      switch (char) {\n        case '<': {\n          const nextChar = token.charAt(j + 1);\n          if (nextChar === '/') { // closing tag\n            // leaving an element\n            elementIndexes.pop();\n          } else { // not a closing tag\n            withinTag = true;\n            elementIndexes.push(++elementIndexCounter);\n          }\n          break\n        }\n        case '>': {\n          withinTag = false;\n          withinAttribute = false;\n          break\n        }\n        case '=': {\n          withinAttribute = true;\n          break\n        }\n      }\n    }\n\n    const elementIndex = elementIndexes[elementIndexes.length - 1];\n    const bindings = getFromMap(elementsToBindings, elementIndex, () => []);\n\n    let attributeName;\n    let attributeValuePre;\n    let attributeValuePost;\n    if (withinAttribute) {\n      // I never use single-quotes for attribute values in HTML, so just support double-quotes or no-quotes\n      const attributePreMatch = /(\\S+)=\"?([^\"=]*)$/.exec(token);\n      attributeName = attributePreMatch[1];\n      attributeValuePre = attributePreMatch[2];\n      const attributePostMatch = /^([^\">]*)(\"?)/.exec(tokens[i + 1]);\n      attributeValuePost = attributePostMatch[1];\n      // Optimization: remove the attribute itself, so we don't create a default attribute which is either empty or just\n      // the \"pre\" text, e.g. `<div foo>` or `<div foo=\"prefix\">`. It will be replaced by the expression anyway.\n      htmlString = htmlString.slice(0, -1 * attributePreMatch[0].length);\n      skipTokenChars = attributePostMatch[0].length;\n    } else {\n      skipTokenChars = 0;\n    }\n\n    const binding = {\n      attributeName,\n      attributeValuePre,\n      attributeValuePost,\n      expressionIndex: i\n    };\n\n    bindings.push(binding);\n\n    if (!withinTag && !withinAttribute) {\n      // Add a placeholder text node, so we can find it later. Note we only support one dynamic child text node\n      htmlString += ' ';\n    }\n  }\n\n  const template = parseTemplate(htmlString);\n\n  return {\n    template,\n    elementsToBindings\n  }\n}\n\nfunction applyBindings (bindings, element, instanceBindings) {\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n\n    const targetNode = binding.attributeName\n      ? element // attribute binding, just use the element itself\n      : element.firstChild; // not an attribute binding, so has a placeholder text node\n\n    const instanceBinding = {\n      binding,\n      targetNode,\n      targetParentNode: undefined,\n      currentExpression: undefined\n    };\n\n    instanceBindings.push(instanceBinding);\n  }\n}\n\nfunction traverseAndSetupBindings (rootElement, elementsToBindings) {\n  const instanceBindings = [];\n\n  let topLevelBindings;\n  if (elementsToBindings.size === 1 && (topLevelBindings = elementsToBindings.get(0))) {\n    // Optimization for the common case where there's only one element and one binding\n    // Skip creating a TreeWalker entirely and just handle the root DOM element\n    applyBindings(topLevelBindings, rootElement, instanceBindings);\n  } else {\n    // traverse dom\n    const treeWalker = document.createTreeWalker(rootElement, NodeFilter.SHOW_ELEMENT);\n\n    let element = rootElement;\n    let elementIndex = -1;\n    do {\n      const bindings = elementsToBindings.get(++elementIndex);\n      if (bindings) {\n        applyBindings(bindings, element, instanceBindings);\n      }\n    } while ((element = treeWalker.nextNode()))\n  }\n\n  return instanceBindings\n}\n\nfunction parseHtml (tokens) {\n  // All templates and bound expressions are unique per tokens array\n  const { template, elementsToBindings } = getFromMap(parseCache, tokens, () => parse(tokens));\n\n  // When we parseHtml, we always return a fresh DOM instance ready to be updated\n  const dom = template.cloneNode(true).content.firstElementChild;\n  const instanceBindings = traverseAndSetupBindings(dom, elementsToBindings);\n\n  return function updateDomInstance (expressions) {\n    patch(expressions, instanceBindings);\n    return dom\n  }\n}\n\nfunction createFramework (state) {\n  const domInstances = getFromMap(domInstancesCache, state, () => new Map());\n  let domInstanceCacheKey = unkeyedSymbol;\n\n  function html (tokens, ...expressions) {\n    // Each unique lexical usage of map() is considered unique due to the html`` tagged template call it makes,\n    // which has lexically unique tokens. The unkeyed symbol is just used for html`` usage outside of a map().\n    const domInstancesForTokens = getFromMap(domInstances, tokens, () => new Map());\n    const updateDomInstance = getFromMap(domInstancesForTokens, domInstanceCacheKey, () => parseHtml(tokens));\n\n    return updateDomInstance(expressions) // update with expressions\n  }\n\n  function map (array, callback, keyFunction) {\n    return array.map((item, index) => {\n      const originalCacheKey = domInstanceCacheKey;\n      domInstanceCacheKey = keyFunction(item);\n      try {\n        return callback(item, index)\n      } finally {\n        domInstanceCacheKey = originalCacheKey;\n      }\n    })\n  }\n\n  return { map, html }\n}\n\nfunction render (container, state, helpers, events, actions, refs, abortSignal, actionContext, firstRender) {\n  const { labelWithSkin, titleForEmoji, unicodeWithSkin } = helpers;\n  const { html, map } = createFramework(state);\n\n  function emojiList (emojis, searchMode, prefix) {\n    return map(emojis, (emoji, i) => {\n      return html`<button role=\"${searchMode ? 'option' : 'menuitem'}\" aria-selected=\"${searchMode ? i === state.activeSearchItem : null}\" aria-label=\"${labelWithSkin(emoji, state.currentSkinTone)}\" title=\"${titleForEmoji(emoji)}\" class=\"${\n                'emoji' +\n                (searchMode && i === state.activeSearchItem ? ' active' : '') +\n                (emoji.unicode ? '' : ' custom-emoji')\n              }\" id=\"${`${prefix}-${emoji.id}`}\" style=\"${emoji.unicode ? null : `--custom-emoji-background: url(${JSON.stringify(emoji.url)})`}\">${\n        emoji.unicode\n          ? unicodeWithSkin(emoji, state.currentSkinTone)\n          : ''\n      }</button>`\n      // It's important for the cache key to be unique based on the prefix, because the framework caches based on the\n      // unique tokens + cache key, and the same emoji may be used in the tab as well as in the fav bar\n    }, emoji => `${prefix}-${emoji.id}`)\n  }\n\n  const section = () => {\n    return html`<section data-ref=\"rootElement\" class=\"picker\" aria-label=\"${state.i18n.regionLabel}\" style=\"${state.pickerStyle || ''}\"><div class=\"pad-top\"></div><div class=\"search-row\"><div class=\"search-wrapper\"><input id=\"search\" class=\"search\" type=\"search\" role=\"combobox\" enterkeyhint=\"search\" placeholder=\"${state.i18n.searchLabel}\" autocapitalize=\"none\" autocomplete=\"off\" spellcheck=\"true\" aria-expanded=\"${!!(state.searchMode && state.currentEmojis.length)}\" aria-controls=\"search-results\" aria-describedby=\"search-description\" aria-autocomplete=\"list\" aria-activedescendant=\"${state.activeSearchItemId ? `emo-${state.activeSearchItemId}` : null}\" data-ref=\"searchElement\" data-on-input=\"onSearchInput\" data-on-keydown=\"onSearchKeydown\"><label class=\"sr-only\" for=\"search\">${state.i18n.searchLabel}</label> <span id=\"search-description\" class=\"sr-only\">${state.i18n.searchDescription}</span></div><div class=\"skintone-button-wrapper ${state.skinTonePickerExpandedAfterAnimation ? 'expanded' : ''}\"><button id=\"skintone-button\" class=\"emoji ${state.skinTonePickerExpanded ? 'hide-focus' : ''}\" aria-label=\"${state.skinToneButtonLabel}\" title=\"${state.skinToneButtonLabel}\" aria-describedby=\"skintone-description\" aria-haspopup=\"listbox\" aria-expanded=\"${state.skinTonePickerExpanded}\" aria-controls=\"skintone-list\" data-on-click=\"onClickSkinToneButton\">${state.skinToneButtonText || ''}</button></div><span id=\"skintone-description\" class=\"sr-only\">${state.i18n.skinToneDescription}</span><div data-ref=\"skinToneDropdown\" id=\"skintone-list\" class=\"skintone-list hide-focus ${state.skinTonePickerExpanded ? '' : 'hidden no-animate'}\" style=\"transform:translateY(${state.skinTonePickerExpanded ? 0 : 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))'})\" role=\"listbox\" aria-label=\"${state.i18n.skinTonesLabel}\" aria-activedescendant=\"skintone-${state.activeSkinTone}\" aria-hidden=\"${!state.skinTonePickerExpanded}\" tabIndex=\"-1\" data-on-focusout=\"onSkinToneOptionsFocusOut\" data-on-click=\"onSkinToneOptionsClick\" data-on-keydown=\"onSkinToneOptionsKeydown\" data-on-keyup=\"onSkinToneOptionsKeyup\">${\n    map(state.skinTones, (skinTone, i) => {\n    return html`<div id=\"skintone-${i}\" class=\"emoji ${i === state.activeSkinTone ? 'active' : ''}\" aria-selected=\"${i === state.activeSkinTone}\" role=\"option\" title=\"${state.i18n.skinTones[i]}\" aria-label=\"${state.i18n.skinTones[i]}\">${skinTone}</div>`\n    }, skinTone => skinTone)\n        }</div></div><div class=\"nav\" role=\"tablist\" style=\"grid-template-columns:repeat(${state.groups.length},1fr)\" aria-label=\"${state.i18n.categoriesLabel}\" data-on-keydown=\"onNavKeydown\" data-on-click=\"onNavClick\">${\n            map(state.groups, (group) => {\n              return html`<button role=\"tab\" class=\"nav-button\" aria-controls=\"tab-${group.id}\" aria-label=\"${state.i18n.categories[group.name]}\" aria-selected=\"${!state.searchMode && state.currentGroup.id === group.id}\" title=\"${state.i18n.categories[group.name]}\" data-group-id=\"${group.id}\"><div class=\"nav-emoji emoji\">${group.emoji}</div></button>`\n            }, group => group.id)\n          }</div><div class=\"indicator-wrapper\"><div class=\"indicator\" style=\"transform:translateX(${(/* istanbul ignore next */ (state.isRtl ? -1 : 1)) * state.currentGroupIndex * 100}%)\"></div></div><div class=\"message ${state.message ? '' : 'gone'}\" role=\"alert\" aria-live=\"polite\">${state.message || ''}</div><div data-ref=\"tabpanelElement\" class=\"tabpanel ${(!state.databaseLoaded || state.message) ? 'gone' : ''}\" role=\"${state.searchMode ? 'region' : 'tabpanel'}\" aria-label=\"${state.searchMode ? state.i18n.searchResultsLabel : state.i18n.categories[state.currentGroup.name]}\" id=\"${state.searchMode ? null : `tab-${state.currentGroup.id}`}\" tabIndex=\"0\" data-on-click=\"onEmojiClick\"><div data-action=\"calculateEmojiGridStyle\">${\n              map(state.currentEmojisWithCategories, (emojiWithCategory, i) => {\n                return html`<div><div id=\"menu-label-${i}\" class=\"category ${state.currentEmojisWithCategories.length === 1 && state.currentEmojisWithCategories[0].category === '' ? 'gone' : ''}\" aria-hidden=\"true\">${\n                  state.searchMode\n                    ? state.i18n.searchResultsLabel\n                    : (\n                      emojiWithCategory.category\n                        ? emojiWithCategory.category\n                        : (\n                          state.currentEmojisWithCategories.length > 1\n                            ? state.i18n.categories.custom\n                            : state.i18n.categories[state.currentGroup.name]\n                        )\n                    )\n                }</div><div class=\"emoji-menu ${i !== 0 && !state.searchMode && state.currentGroup.id === -1 ? 'visibility-auto' : ''}\" style=\"${`--num-rows: ${Math.ceil(emojiWithCategory.emojis.length / state.numColumns)}`}\" data-action=\"updateOnIntersection\" role=\"${state.searchMode ? 'listbox' : 'menu'}\" aria-labelledby=\"menu-label-${i}\" id=\"${state.searchMode ? 'search-results' : null}\">${\n              emojiList(emojiWithCategory.emojis, state.searchMode, /* prefix */ 'emo')\n            }</div></div>`\n              }, emojiWithCategory => emojiWithCategory.category)\n            }</div></div><div class=\"favorites onscreen emoji-menu ${state.message ? 'gone' : ''}\" role=\"menu\" aria-label=\"${state.i18n.favoritesLabel}\" data-on-click=\"onEmojiClick\">${\n            emojiList(state.currentFavorites, /* searchMode */ false, /* prefix */ 'fav')\n          }</div><button data-ref=\"baselineEmoji\" aria-hidden=\"true\" tabindex=\"-1\" class=\"abs-pos hidden emoji baseline-emoji\">😀</button></section>`\n  };\n\n  const rootDom = section();\n\n  // helper for traversing the dom, finding elements by an attribute, and getting the attribute value\n  const forElementWithAttribute = (attributeName, callback) => {\n    for (const element of container.querySelectorAll(`[${attributeName}]`)) {\n      callback(element, element.getAttribute(attributeName));\n    }\n  };\n\n  if (firstRender) { // not a re-render\n    container.appendChild(rootDom);\n\n    // we only bind events/refs once - there is no need to find them again given this component structure\n\n    // bind events\n    for (const eventName of ['click', 'focusout', 'input', 'keydown', 'keyup']) {\n      forElementWithAttribute(`data-on-${eventName}`, (element, listenerName) => {\n        element.addEventListener(eventName, events[listenerName]);\n      });\n    }\n\n    // find refs\n    forElementWithAttribute('data-ref', (element, ref) => {\n      refs[ref] = element;\n    });\n\n    // destroy/abort logic\n    abortSignal.addEventListener('abort', () => {\n      container.removeChild(rootDom);\n    });\n  }\n\n  // set up actions - these are re-bound on every render\n  forElementWithAttribute('data-action', (element, action) => {\n    let boundActions = actionContext.get(action);\n    if (!boundActions) {\n      actionContext.set(action, (boundActions = new WeakSet()));\n    }\n\n    // avoid applying the same action to the same element multiple times\n    if (!boundActions.has(element)) {\n      boundActions.add(element);\n      actions[action](element);\n    }\n  });\n}\n\n/* istanbul ignore next */\nconst qM = typeof queueMicrotask === 'function' ? queueMicrotask : callback => Promise.resolve().then(callback);\n\nfunction createState (abortSignal) {\n  let destroyed = false;\n  let currentObserver;\n\n  const propsToObservers = new Map();\n  const dirtyObservers = new Set();\n\n  let queued;\n\n  const flush = () => {\n    if (destroyed) {\n      return\n    }\n    const observersToRun = [...dirtyObservers];\n    dirtyObservers.clear(); // clear before running to force any new updates to run in another tick of the loop\n    try {\n      for (const observer of observersToRun) {\n        observer();\n      }\n    } finally {\n      queued = false;\n      if (dirtyObservers.size) { // new updates, queue another one\n        queued = true;\n        qM(flush);\n      }\n    }\n  };\n\n  const state = new Proxy({}, {\n    get (target, prop) {\n      if (currentObserver) {\n        let observers = propsToObservers.get(prop);\n        if (!observers) {\n          observers = new Set();\n          propsToObservers.set(prop, observers);\n        }\n        observers.add(currentObserver);\n      }\n      return target[prop]\n    },\n    set (target, prop, newValue) {\n      if (target[prop] !== newValue) {\n        target[prop] = newValue;\n        const observers = propsToObservers.get(prop);\n        if (observers) {\n          for (const observer of observers) {\n            dirtyObservers.add(observer);\n          }\n          if (!queued) {\n            queued = true;\n            qM(flush);\n          }\n        }\n      }\n      return true\n    }\n  });\n\n  const createEffect = (callback) => {\n    const runnable = () => {\n      const oldObserver = currentObserver;\n      currentObserver = runnable;\n      try {\n        return callback()\n      } finally {\n        currentObserver = oldObserver;\n      }\n    };\n    return runnable()\n  };\n\n  // destroy logic\n  abortSignal.addEventListener('abort', () => {\n    destroyed = true;\n  });\n\n  return {\n    state,\n    createEffect\n  }\n}\n\n// Compare two arrays, with a function called on each item in the two arrays that returns true if the items are equal\nfunction arraysAreEqualByFunction (left, right, areEqualFunc) {\n  if (left.length !== right.length) {\n    return false\n  }\n  for (let i = 0; i < left.length; i++) {\n    if (!areEqualFunc(left[i], right[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nconst intersectionObserverCache = new WeakMap();\n\nfunction intersectionObserverAction (node, abortSignal, listener) {\n  /* istanbul ignore else */\n  {\n    // The scroll root is always `.tabpanel`\n    const root = node.closest('.tabpanel');\n\n    let observer = intersectionObserverCache.get(root);\n    if (!observer) {\n      // TODO: replace this with the contentvisibilityautostatechange event when all supported browsers support it.\n      // For now we use IntersectionObserver because it has better cross-browser support, and it would be bad for\n      // old Safari versions if they eagerly downloaded all custom emoji all at once.\n      observer = new IntersectionObserver(listener, {\n        root,\n        // trigger if we are 1/2 scroll container height away so that the images load a bit quicker while scrolling\n        rootMargin: '50% 0px 50% 0px',\n        // trigger if any part of the emoji grid is intersecting\n        threshold: 0\n      });\n\n      // avoid creating a new IntersectionObserver for every category; just use one for the whole root\n      intersectionObserverCache.set(root, observer);\n\n      // assume that the abortSignal is always the same for this root node; just add one event listener\n      abortSignal.addEventListener('abort', () => {\n        observer.disconnect();\n      });\n    }\n\n    observer.observe(node);\n  }\n}\n\n/* eslint-disable prefer-const,no-labels,no-inner-declarations */\n\n// constants\nconst EMPTY_ARRAY = [];\n\nconst { assign } = Object;\n\nfunction createRoot (shadowRoot, props) {\n  const refs = {};\n  const abortController = new AbortController();\n  const abortSignal = abortController.signal;\n  const { state, createEffect } = createState(abortSignal);\n  const actionContext = new Map();\n\n  // initial state\n  assign(state, {\n    skinToneEmoji: undefined,\n    i18n: undefined,\n    database: undefined,\n    customEmoji: undefined,\n    customCategorySorting: undefined,\n    emojiVersion: undefined\n  });\n\n  // public props\n  assign(state, props);\n\n  // private props\n  assign(state, {\n    initialLoad: true,\n    currentEmojis: [],\n    currentEmojisWithCategories: [],\n    rawSearchText: '',\n    searchText: '',\n    searchMode: false,\n    activeSearchItem: -1,\n    message: undefined,\n    skinTonePickerExpanded: false,\n    skinTonePickerExpandedAfterAnimation: false,\n    currentSkinTone: 0,\n    activeSkinTone: 0,\n    skinToneButtonText: undefined,\n    pickerStyle: undefined,\n    skinToneButtonLabel: '',\n    skinTones: [],\n    currentFavorites: [],\n    defaultFavoriteEmojis: undefined,\n    numColumns: DEFAULT_NUM_COLUMNS,\n    isRtl: false,\n    currentGroupIndex: 0,\n    groups: groups,\n    databaseLoaded: false,\n    activeSearchItemId: undefined\n  });\n\n  //\n  // Update the current group based on the currentGroupIndex\n  //\n  createEffect(() => {\n    if (state.currentGroup !== state.groups[state.currentGroupIndex]) {\n      state.currentGroup = state.groups[state.currentGroupIndex];\n    }\n  });\n\n  //\n  // Utils/helpers\n  //\n\n  const focus = id => {\n    shadowRoot.getElementById(id).focus();\n  };\n\n  const emojiToDomNode = emoji => shadowRoot.getElementById(`emo-${emoji.id}`);\n\n  // fire a custom event that crosses the shadow boundary\n  const fireEvent = (name, detail) => {\n    refs.rootElement.dispatchEvent(new CustomEvent(name, {\n      detail,\n      bubbles: true,\n      composed: true\n    }));\n  };\n\n  //\n  // Comparison utils\n  //\n\n  const compareEmojiArrays = (a, b) => a.id === b.id;\n\n  const compareCurrentEmojisWithCategories = (a, b) => {\n    const { category: aCategory, emojis: aEmojis } = a;\n    const { category: bCategory, emojis: bEmojis } = b;\n\n    if (aCategory !== bCategory) {\n      return false\n    }\n\n    return arraysAreEqualByFunction(aEmojis, bEmojis, compareEmojiArrays)\n  };\n\n  //\n  // Update utils to avoid excessive re-renders\n  //\n\n  // avoid excessive re-renders by checking the value before setting\n  const updateCurrentEmojis = (newEmojis) => {\n    if (!arraysAreEqualByFunction(state.currentEmojis, newEmojis, compareEmojiArrays)) {\n      state.currentEmojis = newEmojis;\n    }\n  };\n\n  // avoid excessive re-renders\n  const updateSearchMode = (newSearchMode) => {\n    if (state.searchMode !== newSearchMode) {\n      state.searchMode = newSearchMode;\n    }\n  };\n\n  // avoid excessive re-renders\n  const updateCurrentEmojisWithCategories = (newEmojisWithCategories) => {\n    if (!arraysAreEqualByFunction(state.currentEmojisWithCategories, newEmojisWithCategories, compareCurrentEmojisWithCategories)) {\n      state.currentEmojisWithCategories = newEmojisWithCategories;\n    }\n  };\n\n  // Helpers used by PickerTemplate\n\n  const unicodeWithSkin = (emoji, currentSkinTone) => (\n    (currentSkinTone && emoji.skins && emoji.skins[currentSkinTone]) || emoji.unicode\n  );\n\n  const labelWithSkin = (emoji, currentSkinTone) => (\n    uniq([\n      (emoji.name || unicodeWithSkin(emoji, currentSkinTone)),\n      emoji.annotation,\n      ...(emoji.shortcodes || EMPTY_ARRAY)\n    ].filter(Boolean)).join(', ')\n  );\n\n  const titleForEmoji = (emoji) => (\n    emoji.annotation || (emoji.shortcodes || EMPTY_ARRAY).join(', ')\n  );\n\n  const helpers = {\n    labelWithSkin, titleForEmoji, unicodeWithSkin\n  };\n  const events = {\n    onClickSkinToneButton,\n    onEmojiClick,\n    onNavClick,\n    onNavKeydown,\n    onSearchKeydown,\n    onSkinToneOptionsClick,\n    onSkinToneOptionsFocusOut,\n    onSkinToneOptionsKeydown,\n    onSkinToneOptionsKeyup,\n    onSearchInput\n  };\n  const actions = {\n    calculateEmojiGridStyle,\n    updateOnIntersection\n  };\n\n  let firstRender = true;\n  createEffect(() => {\n    render(shadowRoot, state, helpers, events, actions, refs, abortSignal, actionContext, firstRender);\n    firstRender = false;\n  });\n\n  //\n  // Determine the emoji support level (in requestIdleCallback)\n  //\n\n  // mount logic\n  if (!state.emojiVersion) {\n    detectEmojiSupportLevel().then(level => {\n      // Can't actually test emoji support in Jest/Vitest/JSDom, emoji never render in color in Cairo\n      /* istanbul ignore next */\n      if (!level) {\n        state.message = state.i18n.emojiUnsupportedMessage;\n      }\n    });\n  }\n\n  //\n  // Set or update the database object\n  //\n\n  createEffect(() => {\n    // show a Loading message if it takes a long time, or show an error if there's a network/IDB error\n    async function handleDatabaseLoading () {\n      let showingLoadingMessage = false;\n      const timeoutHandle = setTimeout(() => {\n        showingLoadingMessage = true;\n        state.message = state.i18n.loadingMessage;\n      }, TIMEOUT_BEFORE_LOADING_MESSAGE);\n      try {\n        await state.database.ready();\n        state.databaseLoaded = true; // eslint-disable-line no-unused-vars\n      } catch (err) {\n        console.error(err);\n        state.message = state.i18n.networkErrorMessage;\n      } finally {\n        clearTimeout(timeoutHandle);\n        if (showingLoadingMessage) { // Seems safer than checking the i18n string, which may change\n          showingLoadingMessage = false;\n          state.message = ''; // eslint-disable-line no-unused-vars\n        }\n      }\n    }\n\n    if (state.database) {\n      /* no await */\n      handleDatabaseLoading();\n    }\n  });\n\n  //\n  // Global styles for the entire picker\n  //\n\n  createEffect(() => {\n    state.pickerStyle = `\n      --num-groups: ${state.groups.length}; \n      --indicator-opacity: ${state.searchMode ? 0 : 1}; \n      --num-skintones: ${NUM_SKIN_TONES};`;\n  });\n\n  //\n  // Set or update the customEmoji\n  //\n\n  createEffect(() => {\n    if (state.customEmoji && state.database) {\n      updateCustomEmoji(); // re-run whenever customEmoji change\n    }\n  });\n\n  createEffect(() => {\n    if (state.customEmoji && state.customEmoji.length) {\n      if (state.groups !== allGroups) { // don't update unnecessarily\n        state.groups = allGroups;\n      }\n    } else if (state.groups !== groups) {\n      if (state.currentGroupIndex) {\n        // If the current group is anything other than \"custom\" (which is first), decrement.\n        // This fixes the odd case where you set customEmoji, then pick a category, then unset customEmoji\n        state.currentGroupIndex--;\n      }\n      state.groups = groups;\n    }\n  });\n\n  //\n  // Set or update the preferred skin tone\n  //\n\n  createEffect(() => {\n    async function updatePreferredSkinTone () {\n      if (state.databaseLoaded) {\n        state.currentSkinTone = await state.database.getPreferredSkinTone();\n      }\n    }\n\n    /* no await */ updatePreferredSkinTone();\n  });\n\n  createEffect(() => {\n    state.skinTones = Array(NUM_SKIN_TONES).fill().map((_, i) => applySkinTone(state.skinToneEmoji, i));\n  });\n\n  createEffect(() => {\n    state.skinToneButtonText = state.skinTones[state.currentSkinTone];\n  });\n\n  createEffect(() => {\n    state.skinToneButtonLabel = state.i18n.skinToneLabel.replace('{skinTone}', state.i18n.skinTones[state.currentSkinTone]);\n  });\n\n  //\n  // Set or update the favorites emojis\n  //\n\n  createEffect(() => {\n    async function updateDefaultFavoriteEmojis () {\n      const { database } = state;\n      const favs = (await Promise.all(MOST_COMMONLY_USED_EMOJI.map(unicode => (\n        database.getEmojiByUnicodeOrName(unicode)\n      )))).filter(Boolean); // filter because in Jest/Vitest tests we don't have all the emoji in the DB\n      state.defaultFavoriteEmojis = favs;\n    }\n\n    if (state.databaseLoaded) {\n      /* no await */ updateDefaultFavoriteEmojis();\n    }\n  });\n\n  function updateCustomEmoji () {\n    // Certain effects have an implicit dependency on customEmoji since it affects the database\n    // Getting it here on the state ensures this effect re-runs when customEmoji change.\n    const { customEmoji, database } = state;\n    const databaseCustomEmoji = customEmoji || EMPTY_ARRAY;\n    if (database.customEmoji !== databaseCustomEmoji) {\n      // Avoid setting this if the customEmoji have _not_ changed, because the setter triggers a re-computation of the\n      // `customEmojiIndex`. Note we don't bother with deep object changes.\n      database.customEmoji = databaseCustomEmoji;\n    }\n  }\n\n  createEffect(() => {\n    async function updateFavorites () {\n      updateCustomEmoji(); // re-run whenever customEmoji change\n      const { database, defaultFavoriteEmojis, numColumns } = state;\n      const dbFavorites = await database.getTopFavoriteEmoji(numColumns);\n      const favorites = await summarizeEmojis(uniqBy([\n        ...dbFavorites,\n        ...defaultFavoriteEmojis\n      ], _ => (_.unicode || _.name)).slice(0, numColumns));\n      state.currentFavorites = favorites;\n    }\n\n    if (state.databaseLoaded && state.defaultFavoriteEmojis) {\n      /* no await */ updateFavorites();\n    }\n  });\n\n  //\n  // Re-run whenever the emoji grid changes size, and re-calc style/layout-related state variables:\n  // 1) Re-calculate the --num-columns var because it may have changed\n  // 2) Re-calculate whether we're in RTL mode or not.\n  //\n  // The benefit of doing this in one place is to align with rAF/ResizeObserver\n  // and do all the calculations in one go. RTL vs LTR is not strictly layout-related,\n  // but since we're already reading the style here, and since it's already aligned with\n  // the rAF loop, this is the most appropriate place to do it perf-wise.\n  //\n\n  function calculateEmojiGridStyle (node) {\n    resizeObserverAction(node, abortSignal, () => {\n      /* istanbul ignore next */\n      { // jsdom throws errors for this kind of fancy stuff\n        // read all the style/layout calculations we need to make\n        const style = getComputedStyle(refs.rootElement);\n        const newNumColumns = parseInt(style.getPropertyValue('--num-columns'), 10);\n        const newIsRtl = style.getPropertyValue('direction') === 'rtl';\n\n        // write to state variables\n        state.numColumns = newNumColumns;\n        state.isRtl = newIsRtl;\n      }\n    });\n  }\n\n  // Re-run whenever the custom emoji in a category are shown/hidden. This is an optimization that simulates\n  // what we'd get from `<img loading=lazy>` but without rendering an `<img>`.\n  function updateOnIntersection (node) {\n    intersectionObserverAction(node, abortSignal, (entries) => {\n      for (const { target, isIntersecting } of entries) {\n        target.classList.toggle('onscreen', isIntersecting);\n      }\n    });\n  }\n\n  //\n  // Set or update the currentEmojis. Check for invalid ZWJ renderings\n  // (i.e. double emoji).\n  //\n\n  createEffect(() => {\n    async function updateEmojis () {\n      const { searchText, currentGroup, databaseLoaded, customEmoji } = state;\n      if (!databaseLoaded) {\n        state.currentEmojis = [];\n        state.searchMode = false;\n      } else if (searchText.length >= MIN_SEARCH_TEXT_LENGTH) {\n        const newEmojis = await getEmojisBySearchQuery(searchText);\n        if (state.searchText === searchText) { // if the situation changes asynchronously, do not update\n          updateCurrentEmojis(newEmojis);\n          updateSearchMode(true);\n        }\n      } else { // database is loaded and we're not in search mode, so we're in normal category mode\n        const { id: currentGroupId } = currentGroup;\n        // avoid race condition where currentGroupId is -1 and customEmoji is undefined/empty\n        if (currentGroupId !== -1 || (customEmoji && customEmoji.length)) {\n          const newEmojis = await getEmojisByGroup(currentGroupId);\n          if (state.currentGroup.id === currentGroupId) { // if the situation changes asynchronously, do not update\n            updateCurrentEmojis(newEmojis);\n            updateSearchMode(false);\n          }\n        }\n      }\n    }\n\n    /* no await */ updateEmojis();\n  });\n\n  const resetScrollTopInRaf = () => {\n    rAF(() => resetScrollTopIfPossible(refs.tabpanelElement));\n  };\n\n  // Some emojis have their ligatures rendered as two or more consecutive emojis\n  // We want to treat these the same as unsupported emojis, so we compare their\n  // widths against the baseline widths and remove them as necessary\n  createEffect(() => {\n    const { currentEmojis, emojiVersion } = state;\n    const zwjEmojisToCheck = currentEmojis\n      .filter(emoji => emoji.unicode) // filter custom emoji\n      .filter(emoji => hasZwj(emoji) && !supportedZwjEmojis.has(emoji.unicode));\n    if (!emojiVersion && zwjEmojisToCheck.length) {\n      // render now, check their length later\n      updateCurrentEmojis(currentEmojis);\n      rAF(() => checkZwjSupportAndUpdate(zwjEmojisToCheck));\n    } else {\n      const newEmojis = emojiVersion ? currentEmojis : currentEmojis.filter(isZwjSupported);\n      updateCurrentEmojis(newEmojis);\n      // Reset scroll top to 0 when emojis change\n      resetScrollTopInRaf();\n    }\n  });\n\n  function checkZwjSupportAndUpdate (zwjEmojisToCheck) {\n    const allSupported = checkZwjSupport(zwjEmojisToCheck, refs.baselineEmoji, emojiToDomNode);\n    if (allSupported) {\n      // Even if all emoji are supported, we still need to reset the scroll top to 0 when emojis change\n      resetScrollTopInRaf();\n    } else {\n      // Force update. We only do this if there are any unsupported ZWJ characters since otherwise,\n      // for browsers that support all emoji, it would be an unnecessary extra re-render.\n      state.currentEmojis = [...state.currentEmojis];\n    }\n  }\n\n  function isZwjSupported (emoji) {\n    return !emoji.unicode || !hasZwj(emoji) || supportedZwjEmojis.get(emoji.unicode)\n  }\n\n  async function filterEmojisByVersion (emojis) {\n    const emojiSupportLevel = state.emojiVersion || await detectEmojiSupportLevel();\n    // !version corresponds to custom emoji\n    return emojis.filter(({ version }) => !version || version <= emojiSupportLevel)\n  }\n\n  async function summarizeEmojis (emojis) {\n    return summarizeEmojisForUI(emojis, state.emojiVersion || await detectEmojiSupportLevel())\n  }\n\n  async function getEmojisByGroup (group) {\n    // -1 is custom emoji\n    const emoji = group === -1 ? state.customEmoji : await state.database.getEmojiByGroup(group);\n    return summarizeEmojis(await filterEmojisByVersion(emoji))\n  }\n\n  async function getEmojisBySearchQuery (query) {\n    return summarizeEmojis(await filterEmojisByVersion(await state.database.getEmojiBySearchQuery(query)))\n  }\n\n  createEffect(() => {\n  });\n\n  //\n  // Derive currentEmojisWithCategories from currentEmojis. This is always done even if there\n  // are no categories, because it's just easier to code the HTML this way.\n  //\n\n  createEffect(() => {\n    function calculateCurrentEmojisWithCategories () {\n      const { searchMode, currentEmojis } = state;\n      if (searchMode) {\n        return [\n          {\n            category: '',\n            emojis: currentEmojis\n          }\n        ]\n      }\n      const categoriesToEmoji = new Map();\n      for (const emoji of currentEmojis) {\n        const category = emoji.category || '';\n        let emojis = categoriesToEmoji.get(category);\n        if (!emojis) {\n          emojis = [];\n          categoriesToEmoji.set(category, emojis);\n        }\n        emojis.push(emoji);\n      }\n      return [...categoriesToEmoji.entries()]\n        .map(([category, emojis]) => ({ category, emojis }))\n        .sort((a, b) => state.customCategorySorting(a.category, b.category))\n    }\n\n    const newEmojisWithCategories = calculateCurrentEmojisWithCategories();\n    updateCurrentEmojisWithCategories(newEmojisWithCategories);\n  });\n\n  //\n  // Handle active search item (i.e. pressing up or down while searching)\n  //\n\n  createEffect(() => {\n    state.activeSearchItemId = state.activeSearchItem !== -1 && state.currentEmojis[state.activeSearchItem].id;\n  });\n\n  //\n  // Handle user input on the search input\n  //\n\n  createEffect(() => {\n    const { rawSearchText } = state;\n    rIC(() => {\n      state.searchText = (rawSearchText || '').trim(); // defer to avoid input delays, plus we can trim here\n      state.activeSearchItem = -1;\n    });\n  });\n\n  function onSearchKeydown (event) {\n    if (!state.searchMode || !state.currentEmojis.length) {\n      return\n    }\n\n    const goToNextOrPrevious = (previous) => {\n      halt(event);\n      state.activeSearchItem = incrementOrDecrement(previous, state.activeSearchItem, state.currentEmojis);\n    };\n\n    switch (event.key) {\n      case 'ArrowDown':\n        return goToNextOrPrevious(false)\n      case 'ArrowUp':\n        return goToNextOrPrevious(true)\n      case 'Enter':\n        if (state.activeSearchItem === -1) {\n          // focus the first option in the list since the list must be non-empty at this point (it's verified above)\n          state.activeSearchItem = 0;\n        } else { // there is already an active search item\n          halt(event);\n          return clickEmoji(state.currentEmojis[state.activeSearchItem].id)\n        }\n    }\n  }\n\n  //\n  // Handle user input on nav\n  //\n\n  function onNavClick (event) {\n    const { target } = event;\n    const closestTarget = target.closest('.nav-button');\n    /* istanbul ignore if */\n    if (!closestTarget) {\n      return // This should never happen, but makes me nervous not to have it\n    }\n    const groupId = parseInt(closestTarget.dataset.groupId, 10);\n    refs.searchElement.value = ''; // clear search box input\n    state.rawSearchText = '';\n    state.searchText = '';\n    state.activeSearchItem = -1;\n    state.currentGroupIndex = state.groups.findIndex(_ => _.id === groupId);\n  }\n\n  function onNavKeydown (event) {\n    const { target, key } = event;\n\n    const doFocus = el => {\n      if (el) {\n        halt(event);\n        el.focus();\n      }\n    };\n\n    switch (key) {\n      case 'ArrowLeft':\n        return doFocus(target.previousElementSibling)\n      case 'ArrowRight':\n        return doFocus(target.nextElementSibling)\n      case 'Home':\n        return doFocus(target.parentElement.firstElementChild)\n      case 'End':\n        return doFocus(target.parentElement.lastElementChild)\n    }\n  }\n\n  //\n  // Handle user input on an emoji\n  //\n\n  async function clickEmoji (unicodeOrName) {\n    const emoji = await state.database.getEmojiByUnicodeOrName(unicodeOrName);\n    const emojiSummary = [...state.currentEmojis, ...state.currentFavorites]\n      .find(_ => (_.id === unicodeOrName));\n    const skinTonedUnicode = emojiSummary.unicode && unicodeWithSkin(emojiSummary, state.currentSkinTone);\n    await state.database.incrementFavoriteEmojiCount(unicodeOrName);\n    fireEvent('emoji-click', {\n      emoji,\n      skinTone: state.currentSkinTone,\n      ...(skinTonedUnicode && { unicode: skinTonedUnicode }),\n      ...(emojiSummary.name && { name: emojiSummary.name })\n    });\n  }\n\n  async function onEmojiClick (event) {\n    const { target } = event;\n    /* istanbul ignore if */\n    if (!target.classList.contains('emoji')) {\n      // This should never happen, but makes me nervous not to have it\n      return\n    }\n    halt(event);\n    const id = target.id.substring(4); // replace 'emo-' or 'fav-' prefix\n\n    /* no await */ clickEmoji(id);\n  }\n\n  //\n  // Handle user input on the skintone picker\n  //\n\n  function changeSkinTone (skinTone) {\n    state.currentSkinTone = skinTone;\n    state.skinTonePickerExpanded = false;\n    focus('skintone-button');\n    fireEvent('skin-tone-change', { skinTone });\n    /* no await */ state.database.setPreferredSkinTone(skinTone);\n  }\n\n  function onSkinToneOptionsClick (event) {\n    const { target: { id } } = event;\n    const match = id && id.match(/^skintone-(\\d)/); // skintone option format\n    /* istanbul ignore if */\n    if (!match) { // not a skintone option\n      return // This should never happen, but makes me nervous not to have it\n    }\n    halt(event);\n    const skinTone = parseInt(match[1], 10); // remove 'skintone-' prefix\n    changeSkinTone(skinTone);\n  }\n\n  function onClickSkinToneButton (event) {\n    state.skinTonePickerExpanded = !state.skinTonePickerExpanded;\n    state.activeSkinTone = state.currentSkinTone;\n    // this should always be true, since the button is obscured by the listbox, so this `if` is just to be sure\n    if (state.skinTonePickerExpanded) {\n      halt(event);\n      rAF(() => focus('skintone-list'));\n    }\n  }\n\n  // To make the animation nicer, change the z-index of the skintone picker button\n  // *after* the animation has played. This makes it appear that the picker box\n  // is expanding \"below\" the button\n  createEffect(() => {\n    if (state.skinTonePickerExpanded) {\n      refs.skinToneDropdown.addEventListener('transitionend', () => {\n        state.skinTonePickerExpandedAfterAnimation = true; // eslint-disable-line no-unused-vars\n      }, { once: true });\n    } else {\n      state.skinTonePickerExpandedAfterAnimation = false; // eslint-disable-line no-unused-vars\n    }\n  });\n\n  function onSkinToneOptionsKeydown (event) {\n    // this should never happen, but makes me nervous not to have it\n    /* istanbul ignore if */\n    if (!state.skinTonePickerExpanded) {\n      return\n    }\n    const changeActiveSkinTone = async nextSkinTone => {\n      halt(event);\n      state.activeSkinTone = nextSkinTone;\n    };\n\n    switch (event.key) {\n      case 'ArrowUp':\n        return changeActiveSkinTone(incrementOrDecrement(true, state.activeSkinTone, state.skinTones))\n      case 'ArrowDown':\n        return changeActiveSkinTone(incrementOrDecrement(false, state.activeSkinTone, state.skinTones))\n      case 'Home':\n        return changeActiveSkinTone(0)\n      case 'End':\n        return changeActiveSkinTone(state.skinTones.length - 1)\n      case 'Enter':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        halt(event);\n        return changeSkinTone(state.activeSkinTone)\n      case 'Escape':\n        halt(event);\n        state.skinTonePickerExpanded = false;\n        return focus('skintone-button')\n    }\n  }\n\n  function onSkinToneOptionsKeyup (event) {\n    // this should never happen, but makes me nervous not to have it\n    /* istanbul ignore if */\n    if (!state.skinTonePickerExpanded) {\n      return\n    }\n    switch (event.key) {\n      case ' ':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        halt(event);\n        return changeSkinTone(state.activeSkinTone)\n    }\n  }\n\n  async function onSkinToneOptionsFocusOut (event) {\n    // On blur outside of the skintone listbox, collapse the skintone picker.\n    const { relatedTarget } = event;\n    // The `else` should never happen, but makes me nervous not to have it\n    /* istanbul ignore else */\n    if (!relatedTarget || relatedTarget.id !== 'skintone-list') {\n      state.skinTonePickerExpanded = false;\n    }\n  }\n\n  function onSearchInput (event) {\n    state.rawSearchText = event.target.value;\n  }\n\n  return {\n    $set (newState) {\n      assign(state, newState);\n    },\n    $destroy () {\n      abortController.abort();\n    }\n  }\n}\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\nvar enI18n = {\n  categoriesLabel: 'Categories',\n  emojiUnsupportedMessage: 'Your browser does not support color emoji.',\n  favoritesLabel: 'Favorites',\n  loadingMessage: 'Loading…',\n  networkErrorMessage: 'Could not load emoji.',\n  regionLabel: 'Emoji picker',\n  searchDescription: 'When search results are available, press up or down to select and enter to choose.',\n  searchLabel: 'Search',\n  searchResultsLabel: 'Search results',\n  skinToneDescription: 'When expanded, press up or down to select and enter to choose.',\n  skinToneLabel: 'Choose a skin tone (currently {skinTone})',\n  skinTonesLabel: 'Skin tones',\n  skinTones: [\n    'Default',\n    'Light',\n    'Medium-Light',\n    'Medium',\n    'Medium-Dark',\n    'Dark'\n  ],\n  categories: {\n    custom: 'Custom',\n    'smileys-emotion': 'Smileys and emoticons',\n    'people-body': 'People and body',\n    'animals-nature': 'Animals and nature',\n    'food-drink': 'Food and drink',\n    'travel-places': 'Travel and places',\n    activities: 'Activities',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags'\n  }\n};\n\nvar baseStyles = \":host{--emoji-size:1.375rem;--emoji-padding:0.5rem;--category-emoji-size:var(--emoji-size);--category-emoji-padding:var(--emoji-padding);--indicator-height:3px;--input-border-radius:0.5rem;--input-border-size:1px;--input-font-size:1rem;--input-line-height:1.5;--input-padding:0.25rem;--num-columns:8;--outline-size:2px;--border-size:1px;--border-radius:0;--skintone-border-radius:1rem;--category-font-size:1rem;display:flex;width:min-content;height:400px}:host,:host(.light){color-scheme:light;--background:#fff;--border-color:#e0e0e0;--indicator-color:#385ac1;--input-border-color:#999;--input-font-color:#111;--input-placeholder-color:#999;--outline-color:#999;--category-font-color:#111;--button-active-background:#e6e6e6;--button-hover-background:#d9d9d9}:host(.dark){color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}@media (prefers-color-scheme:dark){:host{color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}}:host([hidden]){display:none}button{margin:0;padding:0;border:0;background:0 0;box-shadow:none;-webkit-tap-highlight-color:transparent}button::-moz-focus-inner{border:0}input{padding:0;margin:0;line-height:1.15;font-family:inherit}input[type=search]{-webkit-appearance:none}:focus{outline:var(--outline-color) solid var(--outline-size);outline-offset:calc(-1*var(--outline-size))}:host([data-js-focus-visible]) :focus:not([data-focus-visible-added]){outline:0}:focus:not(:focus-visible){outline:0}.hide-focus{outline:0}*{box-sizing:border-box}.picker{contain:content;display:flex;flex-direction:column;background:var(--background);border:var(--border-size) solid var(--border-color);border-radius:var(--border-radius);width:100%;height:100%;overflow:hidden;--total-emoji-size:calc(var(--emoji-size) + (2 * var(--emoji-padding)));--total-category-emoji-size:calc(var(--category-emoji-size) + (2 * var(--category-emoji-padding)))}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.hidden{opacity:0;pointer-events:none}.abs-pos{position:absolute;left:0;top:0}.gone{display:none!important}.skintone-button-wrapper,.skintone-list{background:var(--background);z-index:3}.skintone-button-wrapper.expanded{z-index:1}.skintone-list{position:absolute;inset-inline-end:0;top:0;z-index:2;overflow:visible;border-bottom:var(--border-size) solid var(--border-color);border-radius:0 0 var(--skintone-border-radius) var(--skintone-border-radius);will-change:transform;transition:transform .2s ease-in-out;transform-origin:center 0}@media (prefers-reduced-motion:reduce){.skintone-list{transition-duration:.001s}}@supports not (inset-inline-end:0){.skintone-list{right:0}}.skintone-list.no-animate{transition:none}.tabpanel{overflow-y:auto;scrollbar-gutter:stable;-webkit-overflow-scrolling:touch;will-change:transform;min-height:0;flex:1;contain:content}.emoji-menu{display:grid;grid-template-columns:repeat(var(--num-columns),var(--total-emoji-size));justify-content:space-around;align-items:flex-start;width:100%}.emoji-menu.visibility-auto{content-visibility:auto;contain-intrinsic-size:calc(var(--num-columns)*var(--total-emoji-size)) calc(var(--num-rows)*var(--total-emoji-size))}.category{padding:var(--emoji-padding);font-size:var(--category-font-size);color:var(--category-font-color)}.emoji,button.emoji{font-size:var(--emoji-size);display:flex;align-items:center;justify-content:center;border-radius:100%;height:var(--total-emoji-size);width:var(--total-emoji-size);line-height:1;overflow:hidden;font-family:var(--emoji-font-family);cursor:pointer}@media (hover:hover) and (pointer:fine){.emoji:hover,button.emoji:hover{background:var(--button-hover-background)}}.emoji.active,.emoji:active,button.emoji.active,button.emoji:active{background:var(--button-active-background)}.onscreen .custom-emoji::after{content:\\\"\\\";width:var(--emoji-size);height:var(--emoji-size);background-repeat:no-repeat;background-position:center center;background-size:contain;background-image:var(--custom-emoji-background)}.nav,.nav-button{align-items:center}.nav{display:grid;justify-content:space-between;contain:content}.nav-button{display:flex;justify-content:center}.nav-emoji{font-size:var(--category-emoji-size);width:var(--total-category-emoji-size);height:var(--total-category-emoji-size)}.indicator-wrapper{display:flex;border-bottom:1px solid var(--border-color)}.indicator{width:calc(100%/var(--num-groups));height:var(--indicator-height);opacity:var(--indicator-opacity);background-color:var(--indicator-color);will-change:transform,opacity;transition:opacity .1s linear,transform .25s ease-in-out}@media (prefers-reduced-motion:reduce){.indicator{will-change:opacity;transition:opacity .1s linear}}.pad-top,input.search{background:var(--background);width:100%}.pad-top{height:var(--emoji-padding);z-index:3}.search-row{display:flex;align-items:center;position:relative;padding-inline-start:var(--emoji-padding);padding-bottom:var(--emoji-padding)}.search-wrapper{flex:1;min-width:0}input.search{padding:var(--input-padding);border-radius:var(--input-border-radius);border:var(--input-border-size) solid var(--input-border-color);color:var(--input-font-color);font-size:var(--input-font-size);line-height:var(--input-line-height)}input.search::placeholder{color:var(--input-placeholder-color)}.favorites{overflow-y:auto;scrollbar-gutter:stable;display:flex;flex-direction:row;border-top:var(--border-size) solid var(--border-color);contain:content}.message{padding:var(--emoji-padding)}\";\n\nconst PROPS = [\n  'customEmoji',\n  'customCategorySorting',\n  'database',\n  'dataSource',\n  'i18n',\n  'locale',\n  'skinToneEmoji',\n  'emojiVersion'\n];\n\n// Styles injected ourselves, so we can declare the FONT_FAMILY variable in one place\nconst EXTRA_STYLES = `:host{--emoji-font-family:${FONT_FAMILY}}`;\n\nclass PickerElement extends HTMLElement {\n  constructor (props) {\n    super();\n    this.attachShadow({ mode: 'open' });\n    const style = document.createElement('style');\n    style.textContent = baseStyles + EXTRA_STYLES;\n    this.shadowRoot.appendChild(style);\n    this._ctx = {\n      // Set defaults\n      locale: DEFAULT_LOCALE,\n      dataSource: DEFAULT_DATA_SOURCE,\n      skinToneEmoji: DEFAULT_SKIN_TONE_EMOJI,\n      customCategorySorting: DEFAULT_CATEGORY_SORTING,\n      customEmoji: null,\n      i18n: enI18n,\n      emojiVersion: null,\n      ...props\n    };\n    // Handle properties set before the element was upgraded\n    for (const prop of PROPS) {\n      if (prop !== 'database' && Object.prototype.hasOwnProperty.call(this, prop)) {\n        this._ctx[prop] = this[prop];\n        delete this[prop];\n      }\n    }\n    this._dbFlush(); // wait for a flush before creating the db, in case the user calls e.g. a setter or setAttribute\n  }\n\n  connectedCallback () {\n    // The _cmp may be defined if the component was immediately disconnected and then reconnected. In that case,\n    // do nothing (preserve the state)\n    if (!this._cmp) {\n      this._cmp = createRoot(this.shadowRoot, this._ctx);\n    }\n  }\n\n  disconnectedCallback () {\n    // Check in a microtask if the element is still connected. If so, treat this as a \"move\" rather than a disconnect\n    // Inspired by Vue: https://vuejs.org/guide/extras/web-components.html#building-custom-elements-with-vue\n    qM(() => {\n      // this._cmp may be defined if connect-disconnect-connect-disconnect occurs synchronously\n      if (!this.isConnected && this._cmp) {\n        this._cmp.$destroy();\n        this._cmp = undefined;\n\n        const { database } = this._ctx;\n        database.close()\n          // only happens if the database failed to load in the first place, so we don't care\n          .catch(err => console.error(err));\n      }\n    });\n  }\n\n  static get observedAttributes () {\n    return ['locale', 'data-source', 'skin-tone-emoji', 'emoji-version'] // complex objects aren't supported, also use kebab-case\n  }\n\n  attributeChangedCallback (attrName, oldValue, newValue) {\n    this._set(\n      // convert from kebab-case to camelcase\n      // see https://github.com/sveltejs/svelte/issues/3852#issuecomment-665037015\n      attrName.replace(/-([a-z])/g, (_, up) => up.toUpperCase()),\n      // convert string attribute to float if necessary\n      attrName === 'emoji-version' ? parseFloat(newValue) : newValue\n    );\n  }\n\n  _set (prop, newValue) {\n    this._ctx[prop] = newValue;\n    if (this._cmp) {\n      this._cmp.$set({ [prop]: newValue });\n    }\n    if (['locale', 'dataSource'].includes(prop)) {\n      this._dbFlush();\n    }\n  }\n\n  _dbCreate () {\n    const { locale, dataSource, database } = this._ctx;\n    // only create a new database if we really need to\n    if (!database || database.locale !== locale || database.dataSource !== dataSource) {\n      this._set('database', new _database_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({ locale, dataSource }));\n    }\n  }\n\n  // Update the Database in one microtask if the locale/dataSource change. We do one microtask\n  // so we don't create two Databases if e.g. both the locale and the dataSource change\n  _dbFlush () {\n    qM(() => (\n      this._dbCreate()\n    ));\n  }\n}\n\nconst definitions = {};\n\nfor (const prop of PROPS) {\n  definitions[prop] = {\n    get () {\n      if (prop === 'database') {\n        // in rare cases, the microtask may not be flushed yet, so we need to instantiate the DB\n        // now if the user is asking for it\n        this._dbCreate();\n      }\n      return this._ctx[prop]\n    },\n    set (val) {\n      if (prop === 'database') {\n        throw new Error('database is read-only')\n      }\n      this._set(prop, val);\n    }\n  };\n}\n\nObject.defineProperties(PickerElement.prototype, definitions);\n\n/* istanbul ignore else */\nif (!customElements.get('emoji-picker')) { // if already defined, do nothing (e.g. same script imported twice)\n  customElements.define('emoji-picker', PickerElement);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/emoji-picker-element/picker.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzPzFkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ }),

/***/ "./src/icons/add.svg":
/*!***************************!*\
  !*** ./src/icons/add.svg ***!
  \***************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#e8eaed\\\"><path d=\\\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaWNvbnMvYWRkLnN2ZyIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pY29ucy9hZGQuc3ZnPzczMmMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBoZWlnaHQ9XFxcIjI0cHhcXFwiIHZpZXdCb3g9XFxcIjAgLTk2MCA5NjAgOTYwXFxcIiB3aWR0aD1cXFwiMjRweFxcXCIgZmlsbD1cXFwiI2U4ZWFlZFxcXCI+PHBhdGggZD1cXFwiTTQ0MC00NDBIMjAwdi04MGgyNDB2LTI0MGg4MHYyNDBoMjQwdjgwSDUyMHYyNDBoLTgwdi0yNDBaXFxcIj48L3BhdGg+PC9zdmc+XCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/icons/add.svg\n");

/***/ }),

/***/ "./src/icons/task_delete.svg":
/*!***********************************!*\
  !*** ./src/icons/task_delete.svg ***!
  \***********************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#e8eaed\\\"><path d=\\\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaWNvbnMvdGFza19kZWxldGUuc3ZnIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2ljb25zL3Rhc2tfZGVsZXRlLnN2Zz81Y2RlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgaGVpZ2h0PVxcXCIyNHB4XFxcIiB2aWV3Qm94PVxcXCIwIC05NjAgOTYwIDk2MFxcXCIgd2lkdGg9XFxcIjI0cHhcXFwiIGZpbGw9XFxcIiNlOGVhZWRcXFwiPjxwYXRoIGQ9XFxcIk0yODAtMTIwcS0zMyAwLTU2LjUtMjMuNVQyMDAtMjAwdi01MjBoLTQwdi04MGgyMDB2LTQwaDI0MHY0MGgyMDB2ODBoLTQwdjUyMHEwIDMzLTIzLjUgNTYuNVQ2ODAtMTIwSDI4MFptNDAwLTYwMEgyODB2NTIwaDQwMHYtNTIwWk0zNjAtMjgwaDgwdi0zNjBoLTgwdjM2MFptMTYwIDBoODB2LTM2MGgtODB2MzYwWk0yODAtNzIwdjUyMC01MjBaXFxcIj48L3BhdGg+PC9zdmc+XCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/icons/task_delete.svg\n");

/***/ }),

/***/ "./src/icons/task_done.svg":
/*!*********************************!*\
  !*** ./src/icons/task_done.svg ***!
  \*********************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#e8eaed\\\"><path d=\\\"m381-240 424-424-57-56-368 367-169-170-57 57 227 226Zm0 113L42-466l169-170 170 170 366-367 172 168-538 538Z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaWNvbnMvdGFza19kb25lLnN2ZyIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pY29ucy90YXNrX2RvbmUuc3ZnPzVkZmEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBoZWlnaHQ9XFxcIjI0cHhcXFwiIHZpZXdCb3g9XFxcIjAgLTk2MCA5NjAgOTYwXFxcIiB3aWR0aD1cXFwiMjRweFxcXCIgZmlsbD1cXFwiI2U4ZWFlZFxcXCI+PHBhdGggZD1cXFwibTM4MS0yNDAgNDI0LTQyNC01Ny01Ni0zNjggMzY3LTE2OS0xNzAtNTcgNTcgMjI3IDIyNlptMCAxMTNMNDItNDY2bDE2OS0xNzAgMTcwIDE3MCAzNjYtMzY3IDE3MiAxNjgtNTM4IDUzOFpcXFwiPjwvcGF0aD48L3N2Zz5cIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/icons/task_done.svg\n");

/***/ }),

/***/ "./src/icons/task_edit.svg":
/*!*********************************!*\
  !*** ./src/icons/task_edit.svg ***!
  \*********************************/
/***/ ((module) => {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#e8eaed\\\"><path d=\\\"M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaWNvbnMvdGFza19lZGl0LnN2ZyIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pY29ucy90YXNrX2VkaXQuc3ZnPzg1YTIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBoZWlnaHQ9XFxcIjI0cHhcXFwiIHZpZXdCb3g9XFxcIjAgLTk2MCA5NjAgOTYwXFxcIiB3aWR0aD1cXFwiMjRweFxcXCIgZmlsbD1cXFwiI2U4ZWFlZFxcXCI+PHBhdGggZD1cXFwiTTIwMC0yMDBoNTdsMzkxLTM5MS01Ny01Ny0zOTEgMzkxdjU3Wm0tODAgODB2LTE3MGw1MjgtNTI3cTEyLTExIDI2LjUtMTd0MzAuNS02cTE2IDAgMzEgNnQyNiAxOGw1NSA1NnExMiAxMSAxNy41IDI2dDUuNSAzMHEwIDE2LTUuNSAzMC41VDgxNy02NDdMMjkwLTEyMEgxMjBabTY0MC01ODQtNTYtNTYgNTYgNTZabS0xNDEgODUtMjgtMjkgNTcgNTctMjktMjhaXFxcIj48L3BhdGg+PC9zdmc+XCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/icons/task_edit.svg\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _reset_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reset.css */ \"./src/reset.css\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n/* harmony import */ var _modules_ui_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/ui.js */ \"./src/modules/ui.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFxQjtBQUNDO0FBQ0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vcmVzZXQuY3NzJztcbmltcG9ydCAnLi9zdHlsZXMuY3NzJztcbmltcG9ydCAnLi9tb2R1bGVzL3VpLmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/modules/project.js":
/*!********************************!*\
  !*** ./src/modules/project.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProject: () => (/* binding */ addProject),\n/* harmony export */   deleteProjByUUID: () => (/* binding */ deleteProjByUUID),\n/* harmony export */   getAllProjs: () => (/* binding */ getAllProjs),\n/* harmony export */   getProjByUUID: () => (/* binding */ getProjByUUID),\n/* harmony export */   setProjs: () => (/* binding */ setProjs)\n/* harmony export */ });\nlet projectMap = {}; // uuid -> Project\n\nclass Project {\n    constructor(name, emoji) {\n        this.name = name;\n        this.emoji = emoji;\n        this.uuid = crypto.randomUUID();\n    }\n}\n\nfunction addProject(name, emoji) {\n    const newProj = new Project(name, emoji);\n    projectMap[newProj.uuid] = newProj;\n    return newProj;\n}\n\nfunction getAllProjs() {\n    return Object.values(projectMap);\n}\n\nfunction setProjs(projs) {\n    projectMap = {};\n    for (const proj of projs) {\n        projectMap[proj.uuid] = proj;\n    }\n}\n\nfunction getProjByUUID(uuid) {\n    return projectMap[uuid] || null;\n}\n\nfunction deleteProjByUUID(uuid) {\n    delete projectMap[uuid];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9wcm9qZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFOEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9wcm9qZWN0LmpzP2VhOGEiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHByb2plY3RNYXAgPSB7fTsgLy8gdXVpZCAtPiBQcm9qZWN0XG5cbmNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGVtb2ppKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuZW1vamkgPSBlbW9qaTtcbiAgICAgICAgdGhpcy51dWlkID0gY3J5cHRvLnJhbmRvbVVVSUQoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGFkZFByb2plY3QobmFtZSwgZW1vamkpIHtcbiAgICBjb25zdCBuZXdQcm9qID0gbmV3IFByb2plY3QobmFtZSwgZW1vamkpO1xuICAgIHByb2plY3RNYXBbbmV3UHJvai51dWlkXSA9IG5ld1Byb2o7XG4gICAgcmV0dXJuIG5ld1Byb2o7XG59XG5cbmZ1bmN0aW9uIGdldEFsbFByb2pzKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHByb2plY3RNYXApO1xufVxuXG5mdW5jdGlvbiBzZXRQcm9qcyhwcm9qcykge1xuICAgIHByb2plY3RNYXAgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHByb2ogb2YgcHJvanMpIHtcbiAgICAgICAgcHJvamVjdE1hcFtwcm9qLnV1aWRdID0gcHJvajtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGdldFByb2pCeVVVSUQodXVpZCkge1xuICAgIHJldHVybiBwcm9qZWN0TWFwW3V1aWRdIHx8IG51bGw7XG59XG5cbmZ1bmN0aW9uIGRlbGV0ZVByb2pCeVVVSUQodXVpZCkge1xuICAgIGRlbGV0ZSBwcm9qZWN0TWFwW3V1aWRdO1xufVxuXG5leHBvcnQgeyBhZGRQcm9qZWN0LCBnZXRBbGxQcm9qcywgc2V0UHJvanMsIGdldFByb2pCeVVVSUQsIGRlbGV0ZVByb2pCeVVVSUQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/project.js\n");

/***/ }),

/***/ "./src/modules/storage.js":
/*!********************************!*\
  !*** ./src/modules/storage.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retrieve: () => (/* binding */ retrieve),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\nfunction store(key, val) {\n    let toStore = {\n        type: typeof val,\n        value: val,\n    };\n\n    localStorage.setItem(key, JSON.stringify(toStore));\n}\n\nfunction retrieve(key, defaultval = null) {\n    const stored = localStorage.getItem(key);\n    if (!stored) return defaultval;\n\n    const parsed = JSON.parse(localStorage.getItem(key));\n    switch (parsed.type) {\n        case 'string':\n            return parsed.value;\n        case 'number':\n            return +parsed.value;\n        case 'boolean':\n            return Boolean(parsed.value);\n        case 'object':\n            return parsed.value;\n        default:\n            return defaultval;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvc3RvcmFnZS5qcz9lZWNiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHN0b3JlKGtleSwgdmFsKSB7XG4gICAgbGV0IHRvU3RvcmUgPSB7XG4gICAgICAgIHR5cGU6IHR5cGVvZiB2YWwsXG4gICAgICAgIHZhbHVlOiB2YWwsXG4gICAgfTtcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodG9TdG9yZSkpO1xufVxuXG5mdW5jdGlvbiByZXRyaWV2ZShrZXksIGRlZmF1bHR2YWwgPSBudWxsKSB7XG4gICAgY29uc3Qgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICBpZiAoIXN0b3JlZCkgcmV0dXJuIGRlZmF1bHR2YWw7XG5cbiAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICAgIHN3aXRjaCAocGFyc2VkLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgIHJldHVybiBwYXJzZWQudmFsdWU7XG4gICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICByZXR1cm4gK3BhcnNlZC52YWx1ZTtcbiAgICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICAgICAgICByZXR1cm4gQm9vbGVhbihwYXJzZWQudmFsdWUpO1xuICAgICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlZC52YWx1ZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBkZWZhdWx0dmFsO1xuICAgIH1cbn1cbmV4cG9ydCB7IHN0b3JlLCByZXRyaWV2ZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/storage.js\n");

/***/ }),

/***/ "./src/modules/task.js":
/*!*****************************!*\
  !*** ./src/modules/task.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTask: () => (/* binding */ createTask),\n/* harmony export */   deleteTaskByUUID: () => (/* binding */ deleteTaskByUUID),\n/* harmony export */   getAllTasks: () => (/* binding */ getAllTasks),\n/* harmony export */   getCompletedTasks: () => (/* binding */ getCompletedTasks),\n/* harmony export */   getMonthlyTasks: () => (/* binding */ getMonthlyTasks),\n/* harmony export */   getTasksByProjectUUID: () => (/* binding */ getTasksByProjectUUID),\n/* harmony export */   getTasksByUUID: () => (/* binding */ getTasksByUUID),\n/* harmony export */   getWeeklyTasks: () => (/* binding */ getWeeklyTasks),\n/* harmony export */   setTasks: () => (/* binding */ setTasks),\n/* harmony export */   toggleTaskDone: () => (/* binding */ toggleTaskDone)\n/* harmony export */ });\nclass Task {\n    constructor(desc, priority, duedate, proj, completed = false) {\n        this.desc = desc;\n        this.priority = priority; // enum: High/Medium/Low\n        this.duedate = duedate;\n        this.proj = proj;\n        this.completed = completed;\n        this.uuid = crypto.randomUUID();\n    }\n}\n\nlet taskMap = {}; // uuid → Task\n\nfunction getAllTasks() {\n    return Object.values(taskMap);\n}\n\nfunction getWeeklyTasks() {\n    const now = new Date();\n    const oneWeekFromNow = new Date(now);\n    oneWeekFromNow.setDate(now.getDate() + 7);\n\n    return Object.values(taskMap).filter((task) => {\n        const due = new Date(task.duedate);\n        return due >= now && due <= oneWeekFromNow;\n    });\n}\n\nfunction getMonthlyTasks() {\n    const now = new Date();\n    const oneMonthFromNow = new Date(now);\n    oneMonthFromNow.setMonth(now.getMonth() + 1);\n\n    return Object.values(taskMap).filter((task) => {\n        const due = new Date(task.duedate);\n        return due >= now && due <= oneMonthFromNow;\n    });\n}\n\nfunction getCompletedTasks() {\n    return Object.values(taskMap).filter((task) => task.completed);\n}\n\nfunction setTasks(tasks) {\n    taskMap = {};\n    for (const task of tasks) {\n        taskMap[task.uuid] = task;\n    }\n}\n\nfunction createTask(desc, priority, duedate, proj, completed = false) {\n    const formattedDate = new Date(duedate).toISOString().split('T')[0]; // Convert to YYYY-MM-DD\n    const newTask = new Task(desc, priority, formattedDate, proj, completed);\n    taskMap[newTask.uuid] = newTask;\n    return newTask;\n}\n\nfunction deleteTaskByUUID(uuid) {\n    delete taskMap[uuid];\n}\n\nfunction toggleTaskDone(uuid) {\n    const task = taskMap[uuid];\n    if (task) {\n        task.completed = !task.completed;\n    }\n}\n\nfunction getTasksByUUID(uuid) {\n    return taskMap[uuid] || null;\n}\nfunction getTasksByProjectUUID(uuid) {\n    return Object.values(taskMap).filter((task) => task.proj === uuid);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy90YXNrLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlFQUF5RTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFhRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL3Rhc2suanM/N2M2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBUYXNrIHtcbiAgICBjb25zdHJ1Y3RvcihkZXNjLCBwcmlvcml0eSwgZHVlZGF0ZSwgcHJvaiwgY29tcGxldGVkID0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5kZXNjID0gZGVzYztcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5OyAvLyBlbnVtOiBIaWdoL01lZGl1bS9Mb3dcbiAgICAgICAgdGhpcy5kdWVkYXRlID0gZHVlZGF0ZTtcbiAgICAgICAgdGhpcy5wcm9qID0gcHJvajtcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSBjb21wbGV0ZWQ7XG4gICAgICAgIHRoaXMudXVpZCA9IGNyeXB0by5yYW5kb21VVUlEKCk7XG4gICAgfVxufVxuXG5sZXQgdGFza01hcCA9IHt9OyAvLyB1dWlkIOKGkiBUYXNrXG5cbmZ1bmN0aW9uIGdldEFsbFRhc2tzKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRhc2tNYXApO1xufVxuXG5mdW5jdGlvbiBnZXRXZWVrbHlUYXNrcygpIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IG9uZVdlZWtGcm9tTm93ID0gbmV3IERhdGUobm93KTtcbiAgICBvbmVXZWVrRnJvbU5vdy5zZXREYXRlKG5vdy5nZXREYXRlKCkgKyA3KTtcblxuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRhc2tNYXApLmZpbHRlcigodGFzaykgPT4ge1xuICAgICAgICBjb25zdCBkdWUgPSBuZXcgRGF0ZSh0YXNrLmR1ZWRhdGUpO1xuICAgICAgICByZXR1cm4gZHVlID49IG5vdyAmJiBkdWUgPD0gb25lV2Vla0Zyb21Ob3c7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldE1vbnRobHlUYXNrcygpIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IG9uZU1vbnRoRnJvbU5vdyA9IG5ldyBEYXRlKG5vdyk7XG4gICAgb25lTW9udGhGcm9tTm93LnNldE1vbnRoKG5vdy5nZXRNb250aCgpICsgMSk7XG5cbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0YXNrTWFwKS5maWx0ZXIoKHRhc2spID0+IHtcbiAgICAgICAgY29uc3QgZHVlID0gbmV3IERhdGUodGFzay5kdWVkYXRlKTtcbiAgICAgICAgcmV0dXJuIGR1ZSA+PSBub3cgJiYgZHVlIDw9IG9uZU1vbnRoRnJvbU5vdztcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Q29tcGxldGVkVGFza3MoKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGFza01hcCkuZmlsdGVyKCh0YXNrKSA9PiB0YXNrLmNvbXBsZXRlZCk7XG59XG5cbmZ1bmN0aW9uIHNldFRhc2tzKHRhc2tzKSB7XG4gICAgdGFza01hcCA9IHt9O1xuICAgIGZvciAoY29uc3QgdGFzayBvZiB0YXNrcykge1xuICAgICAgICB0YXNrTWFwW3Rhc2sudXVpZF0gPSB0YXNrO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlVGFzayhkZXNjLCBwcmlvcml0eSwgZHVlZGF0ZSwgcHJvaiwgY29tcGxldGVkID0gZmFsc2UpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gbmV3IERhdGUoZHVlZGF0ZSkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdOyAvLyBDb252ZXJ0IHRvIFlZWVktTU0tRERcbiAgICBjb25zdCBuZXdUYXNrID0gbmV3IFRhc2soZGVzYywgcHJpb3JpdHksIGZvcm1hdHRlZERhdGUsIHByb2osIGNvbXBsZXRlZCk7XG4gICAgdGFza01hcFtuZXdUYXNrLnV1aWRdID0gbmV3VGFzaztcbiAgICByZXR1cm4gbmV3VGFzaztcbn1cblxuZnVuY3Rpb24gZGVsZXRlVGFza0J5VVVJRCh1dWlkKSB7XG4gICAgZGVsZXRlIHRhc2tNYXBbdXVpZF07XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZVRhc2tEb25lKHV1aWQpIHtcbiAgICBjb25zdCB0YXNrID0gdGFza01hcFt1dWlkXTtcbiAgICBpZiAodGFzaykge1xuICAgICAgICB0YXNrLmNvbXBsZXRlZCA9ICF0YXNrLmNvbXBsZXRlZDtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGdldFRhc2tzQnlVVUlEKHV1aWQpIHtcbiAgICByZXR1cm4gdGFza01hcFt1dWlkXSB8fCBudWxsO1xufVxuZnVuY3Rpb24gZ2V0VGFza3NCeVByb2plY3RVVUlEKHV1aWQpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0YXNrTWFwKS5maWx0ZXIoKHRhc2spID0+IHRhc2sucHJvaiA9PT0gdXVpZCk7XG59XG5cbmV4cG9ydCB7XG4gICAgZ2V0QWxsVGFza3MsXG4gICAgZ2V0V2Vla2x5VGFza3MsXG4gICAgZ2V0TW9udGhseVRhc2tzLFxuICAgIGdldENvbXBsZXRlZFRhc2tzLFxuICAgIGdldFRhc2tzQnlVVUlELFxuICAgIGNyZWF0ZVRhc2ssXG4gICAgc2V0VGFza3MsXG4gICAgZGVsZXRlVGFza0J5VVVJRCxcbiAgICB0b2dnbGVUYXNrRG9uZSxcbiAgICBnZXRUYXNrc0J5UHJvamVjdFVVSUQsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/task.js\n");

/***/ }),

/***/ "./src/modules/ui.js":
/*!***************************!*\
  !*** ./src/modules/ui.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _icons_task_done_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons/task_done.svg */ \"./src/icons/task_done.svg\");\n/* harmony import */ var _icons_task_done_svg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_icons_task_done_svg__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _icons_task_edit_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../icons/task_edit.svg */ \"./src/icons/task_edit.svg\");\n/* harmony import */ var _icons_task_edit_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_icons_task_edit_svg__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _icons_task_delete_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons/task_delete.svg */ \"./src/icons/task_delete.svg\");\n/* harmony import */ var _icons_task_delete_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_icons_task_delete_svg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _icons_add_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../icons/add.svg */ \"./src/icons/add.svg\");\n/* harmony import */ var _icons_add_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_icons_add_svg__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var emoji_picker_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! emoji-picker-element */ \"./node_modules/emoji-picker-element/index.js\");\n/* harmony import */ var _task_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./task.js */ \"./src/modules/task.js\");\n/* harmony import */ var _project_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./project.js */ \"./src/modules/project.js\");\n/* harmony import */ var _workflow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./workflow.js */ \"./src/modules/workflow.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./storage.js */ \"./src/modules/storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst elements = {\n    alltasksBtn: document.querySelector('#alltasks'),\n    weeklytasksBtn: document.querySelector('#weeklytasks'),\n    monthlytasksBtn: document.querySelector('#monthlytasks'),\n    completedtasksBtn: document.querySelector('#completedtasks'),\n    aside: document.querySelector('aside'),\n    content: document.querySelector('#content'),\n    newTaskForm: document.querySelector('#newtaskform'),\n    newTaskDialog: document.querySelector('#newtaskdialog'),\n    editTaskDialog: document.querySelector('#edittaskdialog'),\n    newProjectDialog: document.querySelector('#newprojectdialog'),\n    editTaskForm: document.querySelector('#edittaskform'),\n    themeSwitch: document.querySelector('#theme-switch'),\n};\n\nclass State {\n    static currentState = 'alltasks';\n    static currentProjectEmoji = '😀';\n\n    static getEmoji() {\n        return State.currentProjectEmoji;\n    }\n\n    static setEmoji(emoji) {\n        State.currentProjectEmoji = emoji;\n    }\n    static setState(newState, isProject = false) {\n        if (isProject) {\n            State.currentState = `project:${newState}`;\n        } else {\n            State.currentState = newState;\n        }\n    }\n    static getState() {\n        return State.currentState;\n    }\n    static getTasksBasedOnState() {\n        switch (State.currentState) {\n            case 'alltasks':\n                return (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getAllTasks)();\n            case 'weeklytasks':\n                return (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getWeeklyTasks)();\n            case 'monthlytasks':\n                return (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getMonthlyTasks)();\n            case 'completedtasks':\n                return (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getCompletedTasks)();\n        }\n        if (State.currentState.startsWith('project:')) {\n            const projectId = State.currentState.split(':')[1];\n            return (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getTasksByProjectUUID)(projectId);\n        }\n    }\n    static getTitleBasedOnState() {\n        switch (State.currentState) {\n            case 'alltasks':\n                return 'All Tasks';\n            case 'weeklytasks':\n                return 'Weekly Tasks';\n            case 'monthlytasks':\n                return 'Monthly Tasks';\n            case 'completedtasks':\n                return 'Completed Tasks';\n        }\n        if (State.currentState.startsWith('project:')) {\n            const projectId = State.currentState.split(':')[1];\n            return `Project: ${(0,_project_js__WEBPACK_IMPORTED_MODULE_6__.getProjByUUID)(projectId).name}`;\n        }\n    }\n}\n\nconst taskBtnHandlers = {\n    done: (e) => {\n        const taskDiv = e.currentTarget.closest('.relative-wrap');\n        const uuid = taskDiv.dataset.uuid;\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.toggleTaskDone)(uuid);\n        taskDiv.firstChild.classList.toggle('completed');\n        (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.saveTasks)();\n    },\n    delete: (e) => {\n        const taskDiv = e.currentTarget.closest('.relative-wrap');\n        const uuid = taskDiv.dataset.uuid;\n        (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.deleteTaskAndSave)(uuid);\n        taskDiv.remove();\n    },\n    edit: (e) => {\n        const taskDiv = e.currentTarget.closest('.relative-wrap');\n        const uuid = taskDiv.dataset.uuid;\n        const task = (0,_task_js__WEBPACK_IMPORTED_MODULE_5__.getTasksByUUID)(uuid);\n\n        //populate the fields of the edit modal with the task data\n        const editTaskForm = elements.editTaskForm;\n        editTaskForm.querySelector('#edit-desc').value = task.desc;\n        editTaskForm.querySelector('#edit-priority').value = task.priority;\n        editTaskForm.querySelector('#edit-duedate').value = task.duedate;\n        editTaskForm.querySelector('#edit-proj').value = task.proj;\n        editTaskForm.querySelector('#edit-completed').checked = task.completed;\n\n        // Set the uuid of the task to be edited in the form dataset\n        editTaskForm.dataset.uuid = uuid;\n\n        elements.editTaskDialog.showModal();\n    },\n};\n\nfunction create(tag, className, text, children) {\n    const el = document.createElement(tag);\n    if (className) el.className = className;\n    if (text) el.textContent = text;\n    if (children) el.replaceChildren(...children);\n    return el;\n}\nfunction taskToDiv({ desc, priority, duedate, proj, completed, uuid }) {\n    const taskRow = create('div', `task-row${completed ? ' completed' : ''}`);\n\n    const priorityClass = {\n        High: 'red',\n        Medium: 'yellow',\n        Low: 'green',\n    }[priority];\n    taskRow.appendChild(create('div', `priority-indicator ${priorityClass}`));\n\n    taskRow.appendChild(create('div', 'task-desc', desc));\n    taskRow.appendChild(\n        create('div', 'task-project', (0,_project_js__WEBPACK_IMPORTED_MODULE_6__.getProjByUUID)(proj).name),\n    );\n    taskRow.appendChild(create('div', 'task-date', duedate));\n\n    const taskActions = create('div', 'task-actions');\n\n    const doneBtn = create('button', 'icon-button task-done');\n    doneBtn.innerHTML = (_icons_task_done_svg__WEBPACK_IMPORTED_MODULE_0___default());\n    const editBtn = create('button', 'icon-button task-edit');\n    editBtn.innerHTML = (_icons_task_edit_svg__WEBPACK_IMPORTED_MODULE_1___default());\n    const deleteBtn = create('button', 'icon-button task-delete');\n    deleteBtn.innerHTML = (_icons_task_delete_svg__WEBPACK_IMPORTED_MODULE_2___default());\n\n    doneBtn.addEventListener('click', taskBtnHandlers.done);\n    editBtn.addEventListener('click', taskBtnHandlers.edit);\n    deleteBtn.addEventListener('click', taskBtnHandlers.delete);\n\n    taskActions.appendChild(doneBtn);\n    taskActions.appendChild(editBtn);\n    taskActions.appendChild(deleteBtn);\n\n    taskRow.appendChild(taskActions);\n\n    const relativeWrap = create('div', 'relative-wrap', null, [taskRow]);\n    relativeWrap.dataset.uuid = uuid;\n    return relativeWrap;\n}\n\nfunction displayTasksBasedOnState() {\n    // Get the current state and display tasks accordingly\n    const currentState = State.getState();\n    const tasks = State.getTasksBasedOnState();\n    const title = State.getTitleBasedOnState();\n\n    // Clears the main content area and renders task objects\n    console.log(`displayTasks() called with title: ${title}, tasks:`);\n    console.log(tasks);\n\n    // Clear main content area\n    content.innerHTML = '';\n\n    // Create Title and add task button\n    const addtaskBtn = create('button');\n    addtaskBtn.id = 'add-task';\n    addtaskBtn.addEventListener('click', () => {\n        elements.newTaskDialog.showModal();\n    });\n    addtaskBtn.innerHTML = (_icons_add_svg__WEBPACK_IMPORTED_MODULE_3___default());\n    content.appendChild(\n        create('div', 'header-line', null, [\n            create('h1', null, title),\n            addtaskBtn,\n        ]),\n    );\n\n    tasks.forEach((task) => {\n        content.appendChild(taskToDiv(task));\n    });\n}\n\nfunction setActive(btn) {\n    const sidebarBtns = [\n        elements.alltasksBtn,\n        elements.weeklytasksBtn,\n        elements.monthlytasksBtn,\n        elements.completedtasksBtn,\n        ...document.querySelectorAll('#projects button'),\n    ];\n\n    sidebarBtns.forEach((btn) => {\n        btn.classList.remove('active');\n    });\n\n    btn.classList.add('active');\n}\n\nfunction createProjectUI() {\n    // refreshes the project buttons in the sidebar\n    // meant to be called multiples times\n    const projects = document.querySelector('#projects');\n    projects.innerHTML = '';\n\n    (0,_project_js__WEBPACK_IMPORTED_MODULE_6__.getAllProjs)().forEach((proj) => {\n        const button = document.createElement('button');\n        button.innerHTML = `<span class=\"emoji\">${proj.emoji}</span> <span class=\"projectname\">${proj.name}</span>`;\n\n        const removeProj = create('div', 'removeproj');\n        removeProj.innerHTML = (_icons_task_delete_svg__WEBPACK_IMPORTED_MODULE_2___default());\n\n        button.appendChild(removeProj);\n        button.addEventListener('click', () => {\n            State.setState(proj.uuid, true);\n            setActive(button);\n            displayTasksBasedOnState();\n        });\n\n        removeProj.addEventListener('click', (e) => {\n            e.stopPropagation();\n            const projId = proj.uuid;\n            (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.deleteProjectAndSave)(projId);\n            button.remove();\n            createProjectUI();\n            if (State.getState() === `project:${projId}`) {\n                State.setState('alltasks');\n                setActive(elements.alltasksBtn);\n                displayTasksBasedOnState();\n            } else {\n                displayTasksBasedOnState();\n            }\n\n            // Remove the project from create task modal and edit task modal\n            const projectSelect = elements.newTaskForm.querySelector('#proj');\n            const editProjectSelect =\n                elements.editTaskForm.querySelector('#edit-proj');\n            const projectOptions = [\n                ...projectSelect.querySelectorAll('option'),\n            ];\n            const editProjectOptions = [\n                ...editProjectSelect.querySelectorAll('option'),\n            ];\n\n            projectOptions.forEach((option) => {\n                if (option.value === projId) {\n                    option.remove();\n                }\n            });\n\n            editProjectOptions.forEach((option) => {\n                if (option.value === projId) {\n                    option.remove();\n                }\n            });\n        });\n        projects.appendChild(button);\n    });\n    const createProjectBtn = document.createElement('button');\n    createProjectBtn.id = 'addproject';\n    createProjectBtn.innerHTML = 'Add Project';\n    createProjectBtn.addEventListener('click', () => {\n        elements.newProjectDialog.showModal();\n    });\n\n    projects.appendChild(createProjectBtn);\n}\nfunction setupSidebar() {\n    // Setup functions related to sidebar and submenu collapse/expansion\n    const aside = document.querySelector('aside');\n    function dropdown(buttonClickEvent) {\n        buttonClickEvent.currentTarget.nextElementSibling.classList.toggle(\n            'show',\n        );\n        buttonClickEvent.currentTarget.classList.toggle('rotate');\n    }\n\n    function toggleSidebar(buttonClickEvent) {\n        aside.classList.toggle('close');\n        buttonClickEvent.currentTarget.classList.toggle('rotate');\n\n        Array.from(document.getElementsByClassName('show')).forEach((ul) => {\n            ul.classList.remove('show');\n            ul.previousElementSibling.classList.remove('rotate');\n        });\n    }\n\n    document.querySelectorAll('aside .dropdown').forEach((button) => {\n        button.addEventListener('click', dropdown);\n    });\n\n    document\n        .querySelector('#toggle-btn')\n        .addEventListener('click', toggleSidebar);\n\n    //\n    elements.alltasksBtn.addEventListener('click', () => {\n        State.setState('alltasks');\n        setActive(elements.alltasksBtn);\n        displayTasksBasedOnState();\n    });\n    elements.weeklytasksBtn.addEventListener('click', () => {\n        State.setState('weeklytasks');\n        setActive(elements.weeklytasksBtn);\n        displayTasksBasedOnState();\n    });\n    elements.monthlytasksBtn.addEventListener('click', () => {\n        State.setState('monthlytasks');\n        setActive(elements.monthlytasksBtn);\n        displayTasksBasedOnState();\n    });\n    elements.completedtasksBtn.addEventListener('click', () => {\n        State.setState('completedtasks');\n        setActive(elements.completedtasksBtn);\n        displayTasksBasedOnState();\n    });\n\n    createProjectUI();\n}\n\nfunction setupNewTaskModal() {\n    const newTaskDialog = elements.newTaskDialog;\n    const newTaskForm = elements.newTaskForm;\n    const cancelBtn = newTaskForm.querySelector('#cancel');\n\n    // Add project names to the project select dropdown\n    const projectSelect = newTaskForm.querySelector('#proj');\n    const projects = (0,_project_js__WEBPACK_IMPORTED_MODULE_6__.getAllProjs)();\n    projects.forEach((proj) => {\n        const option = document.createElement('option');\n        option.value = proj.uuid;\n        option.textContent = `${proj.emoji} ${proj.name}`;\n        projectSelect.appendChild(option);\n    });\n\n    newTaskDialog.addEventListener('close', () => {\n        newTaskForm.reset();\n    });\n\n    newTaskForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const formData = new FormData(newTaskForm);\n        (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.addTaskAndSave)(\n            formData.get('desc'),\n            formData.get('priority'),\n            formData.get('duedate'),\n            formData.get('proj'),\n            formData.get('completed'),\n        );\n        displayTasksBasedOnState();\n        newTaskForm.reset();\n        newTaskDialog.close();\n    });\n\n    cancelBtn.addEventListener('click', () => {\n        newTaskForm.reset();\n        newTaskDialog.close();\n    });\n}\n\nfunction setupEditTaskModal() {\n    const editTaskDialog = document.querySelector('#edittaskdialog');\n    const editTaskForm = document.querySelector('#edittaskform');\n    const cancelBtn = editTaskForm.querySelector('#edit-cancel');\n\n    // Add project names to the project select dropdown\n    const projectSelect = editTaskForm.querySelector('#edit-proj');\n    const projects = (0,_project_js__WEBPACK_IMPORTED_MODULE_6__.getAllProjs)();\n    projects.forEach((proj) => {\n        const option = document.createElement('option');\n        option.value = proj.uuid;\n        option.textContent = `${proj.emoji} ${proj.name}`;\n        projectSelect.appendChild(option);\n    });\n\n    editTaskDialog.addEventListener('close', () => {\n        editTaskForm.reset();\n    });\n\n    cancelBtn.addEventListener('click', () => {\n        editTaskForm.reset();\n        editTaskDialog.close();\n    });\n\n    editTaskForm.addEventListener('submit', (e) => {\n        if (!editTaskForm.dataset.uuid) {\n            return;\n        }\n        e.preventDefault();\n        const formData = new FormData(editTaskForm);\n        const uuid = editTaskForm.dataset.uuid;\n        (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.editTaskAndSave)(\n            uuid,\n            formData.get('edit-desc'),\n            formData.get('edit-priority'),\n            formData.get('edit-duedate'),\n            formData.get('edit-proj'),\n            formData.get('edit-completed'),\n        );\n        displayTasksBasedOnState();\n        editTaskDialog.close();\n    });\n}\n\nfunction setupNewProjectModal() {\n    const newProjectDialog = elements.newProjectDialog;\n    const newProjectForm = document.querySelector('#newprojectform');\n    const emojiPicker = document.querySelector('emoji-picker');\n    emojiPicker.addEventListener('emoji-click', (e) => {\n        const emoji = e.detail.unicode;\n        State.setEmoji(emoji);\n        document.querySelector('#emojioutput').textContent = emoji;\n    });\n\n    newProjectForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const formData = new FormData(newProjectForm);\n        const name = formData.get('projname');\n\n        const newProj = (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.addProjectAndSave)(name, State.getEmoji());\n        createProjectUI();\n\n        // Add project to the select dropdown in new task modal and edit task modal\n        const projectSelect = elements.newTaskForm.querySelector('#proj');\n        const editProjectSelect =\n            elements.editTaskForm.querySelector('#edit-proj');\n        const option = document.createElement('option');\n        option.value = newProj.uuid;\n        option.textContent = `${newProj.emoji} ${newProj.name}`;\n        projectSelect.appendChild(option);\n        editProjectSelect.appendChild(option.cloneNode(true));\n\n        newProjectDialog.close();\n    });\n\n    const cancelBtn = newProjectForm.querySelector('#cancelproject');\n\n    cancelBtn.addEventListener('click', () => {\n        newProjectForm.reset();\n        newProjectDialog.close();\n    });\n}\n\nfunction setupThemeSwitch() {\n    let darkmode = (0,_storage_js__WEBPACK_IMPORTED_MODULE_8__.retrieve)('darkmode', null);\n    const enableDarkmode = () => {\n        document.body.classList.add('darkmode');\n        document.querySelector('emoji-picker').className = 'dark';\n        (0,_storage_js__WEBPACK_IMPORTED_MODULE_8__.store)('darkmode', 'active');\n    };\n\n    const disableDarkmode = () => {\n        document.body.classList.remove('darkmode');\n        document.querySelector('emoji-picker').className = 'light';\n        (0,_storage_js__WEBPACK_IMPORTED_MODULE_8__.store)('darkmode', null);\n    };\n\n    if (darkmode === 'active') enableDarkmode();\n\n    elements.themeSwitch.addEventListener('click', () => {\n        darkmode = (0,_storage_js__WEBPACK_IMPORTED_MODULE_8__.retrieve)('darkmode', null);\n        darkmode !== 'active' ? enableDarkmode() : disableDarkmode();\n    });\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Initialize tasklist\n    (0,_workflow_js__WEBPACK_IMPORTED_MODULE_7__.initializeTasksFromStorage)();\n\n    setupNewTaskModal();\n\n    setupEditTaskModal();\n\n    setupNewProjectModal();\n\n    // Attach appropriate event listeners to sidebar\n    setupSidebar();\n\n    setupThemeSwitch();\n\n    // Display all tasks by default\n    State.setState('alltasks');\n    setActive(elements.alltasksBtn);\n    displayTasksBasedOnState();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/ui.js\n");

/***/ }),

/***/ "./src/modules/workflow.js":
/*!*********************************!*\
  !*** ./src/modules/workflow.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProjectAndSave: () => (/* binding */ addProjectAndSave),\n/* harmony export */   addTaskAndSave: () => (/* binding */ addTaskAndSave),\n/* harmony export */   deleteProjectAndSave: () => (/* binding */ deleteProjectAndSave),\n/* harmony export */   deleteTaskAndSave: () => (/* binding */ deleteTaskAndSave),\n/* harmony export */   editTaskAndSave: () => (/* binding */ editTaskAndSave),\n/* harmony export */   initializeTasksFromStorage: () => (/* binding */ initializeTasksFromStorage),\n/* harmony export */   saveProjects: () => (/* binding */ saveProjects),\n/* harmony export */   saveTasks: () => (/* binding */ saveTasks)\n/* harmony export */ });\n/* harmony import */ var _task_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./task.js */ \"./src/modules/task.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage.js */ \"./src/modules/storage.js\");\n/* harmony import */ var _project_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./project.js */ \"./src/modules/project.js\");\n\n\n\n\n\nconst PREVSTORAGE = 'todo:previously-stored';\nconst TASKLISTKEY = 'todo:task-list-key';\nconst PROJECTLISTKEY = 'todo:project-list-key';\n\nfunction initializeTasksFromStorage() {\n    if (!(0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.retrieve)(PREVSTORAGE)) {\n        console.log('No previous tasks found, defaulting to hardcoded list...');\n\n        // Create dummy projects\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Personal', '🏠');\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Home', '🛋️');\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Finance', '💰');\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Work', '💼');\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Leisure', '🌴');\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)('Health', '🩺');\n\n        const getUUID = (name) =>\n            (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.getAllProjs)().find((p) => p.name === name)?.uuid;\n\n        const now = new Date();\n        const iso = (offsetDays) => {\n            const d = new Date(now);\n            d.setDate(d.getDate() + offsetDays);\n            return d.toISOString();\n        };\n\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Buy groceries: Milk, Eggs, Bread',\n            'High',\n            iso(1),\n            getUUID('Personal'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Call plumber: Fix kitchen sink leak',\n            'Medium',\n            iso(3),\n            getUUID('Home'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Submit tax forms: Before deadline',\n            'High',\n            iso(6),\n            getUUID('Finance'),\n            true,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Finish project report: Due end of week',\n            'High',\n            iso(10),\n            getUUID('Work'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Plan weekend trip: Look for hotel in Vermont',\n            'Low',\n            iso(14),\n            getUUID('Leisure'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            \"Read new book: Start 'Atomic Habits'\",\n            'Medium',\n            iso(20),\n            getUUID('Personal'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Organize desk: Declutter and file papers',\n            'Low',\n            iso(21),\n            getUUID('Home'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Dentist appointment: Routine check-up',\n            'Low',\n            iso(-2),\n            getUUID('Health'),\n            true,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Team sync meeting: Weekly updates with dev team',\n            'Medium',\n            iso(-1),\n            getUUID('Work'),\n            true,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Workout: Leg day at the gym',\n            'Low',\n            iso(-4),\n            getUUID('Health'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Email accountant: Ask about quarterly filings',\n            'High',\n            iso(2),\n            getUUID('Finance'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)('Clean bathroom', 'Medium', iso(5), getUUID('Home'), false);\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)('Water plants', 'Low', iso(0), getUUID('Personal'), false);\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)('Lunch with Alex', 'Low', iso(1), getUUID('Leisure'), true);\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Design new feature: Dashboard widgets',\n            'High',\n            iso(7),\n            getUUID('Work'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Doctor appointment: Annual physical',\n            'Medium',\n            iso(8),\n            getUUID('Health'),\n            true,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)('Yoga session', 'Low', iso(3), getUUID('Health'), false);\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Movie night: Watch Dune 2',\n            'Low',\n            iso(4),\n            getUUID('Leisure'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Review investment portfolio',\n            'High',\n            iso(6),\n            getUUID('Finance'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Write blog post on productivity',\n            'Medium',\n            iso(9),\n            getUUID('Personal'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Fix leaky faucet',\n            'Medium',\n            iso(10),\n            getUUID('Home'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Catch up on reading articles',\n            'Low',\n            iso(11),\n            getUUID('Personal'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Submit reimbursement form',\n            'Medium',\n            iso(2),\n            getUUID('Work'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)('Go for a run', 'Low', iso(1), getUUID('Health'), false);\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Birthday gift for Sarah',\n            'High',\n            iso(12),\n            getUUID('Personal'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Paint living room',\n            'Medium',\n            iso(15),\n            getUUID('Home'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Install budgeting app',\n            'Medium',\n            iso(13),\n            getUUID('Finance'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Catch up with college friend',\n            'Low',\n            iso(5),\n            getUUID('Leisure'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Fix broken shelf',\n            'Medium',\n            iso(6),\n            getUUID('Home'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Refactor legacy code module',\n            'High',\n            iso(14),\n            getUUID('Work'),\n            false,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(\n            'Meditation session',\n            'Low',\n            iso(2),\n            getUUID('Health'),\n            false,\n        );\n        (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(PREVSTORAGE, true);\n        (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(PROJECTLISTKEY, (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.getAllProjs)());\n        (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n        return;\n    } else {\n        const retrievedTasks = (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.retrieve)(TASKLISTKEY);\n        console.log(\n            `Tasks found in local storage, len ${retrievedTasks.length}`,\n        );\n        (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.setTasks)(retrievedTasks);\n        const retrievedProjs = (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.retrieve)(PROJECTLISTKEY);\n        console.log(\n            `Tasks found in local storage, len ${retrievedProjs.length}`,\n        );\n        (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.setProjs)(retrievedProjs);\n    }\n}\n\nfunction addTaskAndSave(desc, priority, duedate, proj, completed = false) {\n    const newTask = (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.createTask)(desc, priority, duedate, proj, completed);\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n    return newTask;\n}\n\nfunction editTaskAndSave(\n    uuid,\n    desc,\n    priority,\n    duedate,\n    proj,\n    completed = false,\n) {\n    const task = (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getTasksByUUID)(uuid);\n    if (!task) {\n        console.error(`Task with uuid ${uuid} not found.`);\n        return null;\n    }\n\n    task.desc = desc;\n    task.priority = priority;\n    task.duedate = duedate;\n    task.proj = proj;\n    task.completed = completed;\n\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n    return task;\n}\n\nfunction addProjectAndSave(name, emoji) {\n    const newProj = (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.addProject)(name, emoji);\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(PROJECTLISTKEY, (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.getAllProjs)());\n    return newProj;\n}\n\nfunction deleteTaskAndSave(uuid) {\n    (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.deleteTaskByUUID)(uuid);\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n}\n\nfunction deleteProjectAndSave(uuid) {\n    (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.deleteProjByUUID)(uuid);\n    // Remove all tasks associated with this project\n    const tasks = (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)();\n    for (const task of tasks) {\n        if (task.proj === uuid) {\n            (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.deleteTaskByUUID)(task.uuid);\n        }\n    }\n\n    // Remove the project itself\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(PROJECTLISTKEY, (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.getAllProjs)());\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n}\n\nfunction saveTasks() {\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(TASKLISTKEY, (0,_task_js__WEBPACK_IMPORTED_MODULE_0__.getAllTasks)());\n}\n\nfunction saveProjects() {\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.store)(PROJECTLISTKEY, (0,_project_js__WEBPACK_IMPORTED_MODULE_2__.getAllProjs)());\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/workflow.js\n");

/***/ }),

/***/ "./src/reset.css":
/*!***********************!*\
  !*** ./src/reset.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./reset.css */ \"./node_modules/css-loader/dist/cjs.js!./src/reset.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVzZXQuY3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQStGO0FBQy9GLE1BQXFGO0FBQ3JGLE1BQTRGO0FBQzVGLE1BQStHO0FBQy9HLE1BQXdHO0FBQ3hHLE1BQXdHO0FBQ3hHLE1BQW1HO0FBQ25HO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7QUFDckMsaUJBQWlCLHVHQUFhO0FBQzlCLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsc0ZBQU87Ozs7QUFJNkM7QUFDckUsT0FBTyxpRUFBZSxzRkFBTyxJQUFJLHNGQUFPLFVBQVUsc0ZBQU8sbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcmVzZXQuY3NzP2VkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/reset.css\n");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxNQUErRjtBQUMvRixNQUFxRjtBQUNyRixNQUE0RjtBQUM1RixNQUErRztBQUMvRyxNQUF3RztBQUN4RyxNQUF3RztBQUN4RyxNQUFvRztBQUNwRztBQUNBOztBQUVBOztBQUVBLDRCQUE0QixxR0FBbUI7QUFDL0Msd0JBQXdCLGtIQUFhO0FBQ3JDLGlCQUFpQix1R0FBYTtBQUM5QixpQkFBaUIsK0ZBQU07QUFDdkIsNkJBQTZCLHNHQUFrQjs7QUFFL0MsYUFBYSwwR0FBRyxDQUFDLHVGQUFPOzs7O0FBSThDO0FBQ3RFLE9BQU8saUVBQWUsdUZBQU8sSUFBSSx1RkFBTyxVQUFVLHVGQUFPLG1CQUFtQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy5jc3M/NDRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/styles.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;